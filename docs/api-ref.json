{
  "pushIndent" : { },
  "helpers" : "com.ibm.sdk.codegen.IBMMustacheHelpers",
  "appVersion" : "1.1.0",
  "generatorClass" : "com.ibm.sdk.codegen.IBMGoCodegen",
  "escapeQuotes" : { },
  "apiFolder" : "github/com/IBM/adminrest-go-sdk",
  "authMethods" : [ {
    "name" : "APIKeyAuth",
    "type" : "apiKey",
    "hasMore" : true,
    "isBasic" : false,
    "isOAuth" : false,
    "isApiKey" : true,
    "vendorExtensions" : { },
    "keyParamName" : "X-Auth-Token",
    "isKeyInQuery" : false,
    "isKeyInHeader" : true,
    "isKeyInCookie" : false,
    "isCode" : false,
    "isPassword" : false,
    "isApplication" : false,
    "isImplicit" : false
  }, {
    "name" : "BasicAuth",
    "type" : "http",
    "hasMore" : true,
    "isBasic" : true,
    "isOAuth" : false,
    "isApiKey" : false,
    "vendorExtensions" : { },
    "isKeyInQuery" : false,
    "isKeyInHeader" : false,
    "isKeyInCookie" : false,
    "isCode" : false,
    "isPassword" : false,
    "isApplication" : false,
    "isImplicit" : false
  }, {
    "name" : "TokenAuth",
    "type" : "apiKey",
    "hasMore" : false,
    "isBasic" : false,
    "isOAuth" : false,
    "isApiKey" : true,
    "vendorExtensions" : { },
    "keyParamName" : "Authorization",
    "isKeyInQuery" : false,
    "isKeyInHeader" : true,
    "isKeyInCookie" : false,
    "isCode" : false,
    "isPassword" : false,
    "isApplication" : false,
    "isImplicit" : false
  } ],
  "generateModelDocs" : true,
  "generateModelTests" : true,
  "codegenService" : {
    "globalParams" : [ ],
    "links" : [ ]
  },
  "generateApiTests" : true,
  "serviceVersion" : "V1",
  "generateModels" : true,
  "mockCurrentVersion" : "2019-01-01",
  "inputSpec" : "/Users/derekhowlett/vnext-git/src/github.ibm.com/mhub/admin-rest-sdk/openapi3/admin-rest.def",
  "host" : "adminrest.cloud.ibm.com",
  "testImports" : [ "\"bytes\"", "\"context\"", "\"fmt\"", "\"github.com/IBM/adminrest-go-sdk/adminrestv1\"", "\"github.com/IBM/go-sdk-core/v4/core\"", "\"github.com/go-openapi/strfmt\"", ". \"github.com/onsi/ginkgo\"", ". \"github.com/onsi/gomega\"", "\"io\"", "\"io/ioutil\"", "\"net/http\"", "\"net/http/httptest\"", "\"os\"", "\"time\"" ],
  "integrationTestImports" : [ "\"fmt\"", "\"github.com/IBM/adminrest-go-sdk/adminrestv1\"", "\"github.com/IBM/go-sdk-core/v4/core\"", ". \"github.com/onsi/ginkgo\"", ". \"github.com/onsi/gomega\"", "\"os\"" ],
  "improvedNameFormattingV2" : false,
  "ibmGeneratorVersion" : "3.25.0-2b3f843a-20210115-164628",
  "basePackage" : "github.com/IBM/adminrest-go-sdk",
  "allowInsecureConnections" : false,
  "supportsIamTokens" : false,
  "appDescription" : "The administration REST API for IBM Event Streams on Cloud.",
  "contextPath" : "",
  "hasAuthMethods" : true,
  "releaseNote" : "Minor update",
  "version" : "1.1.0",
  "apiInfo" : {
    "apis" : [ {
      "pushIndent" : { },
      "helpers" : "com.ibm.sdk.codegen.IBMMustacheHelpers",
      "appVersion" : "1.1.0",
      "generatorClass" : "com.ibm.sdk.codegen.IBMGoCodegen",
      "escapeQuotes" : { },
      "sortParamsByRequiredFlag" : true,
      "classVarName" : "default",
      "generateModelDocs" : true,
      "hasImport" : true,
      "generateModelTests" : true,
      "generateApiTests" : true,
      "serviceVersion" : "V1",
      "classFilename" : "DefaultAPI",
      "generateModels" : true,
      "mockCurrentVersion" : "2019-01-01",
      "inputSpec" : "/Users/derekhowlett/vnext-git/src/github.ibm.com/mhub/admin-rest-sdk/openapi3/admin-rest.def",
      "baseName" : "Default",
      "improvedNameFormattingV2" : false,
      "package" : "github.com/IBM/adminrest-go-sdk",
      "imports" : [ {
        "import" : "DeleteTopicOptions"
      }, {
        "import" : "GetTopicOptions"
      }, {
        "import" : "UpdateTopicOptions"
      }, {
        "import" : "GetMirroringTopicSelectionOptions"
      }, {
        "import" : "CreateTopicOptions"
      }, {
        "import" : "TopicDetail"
      }, {
        "import" : "MirroringTopicSelection"
      }, {
        "import" : "MirroringActiveTopics"
      }, {
        "import" : "ReplaceMirroringTopicSelectionOptions"
      }, {
        "import" : "GetMirroringActiveTopicsOptions"
      }, {
        "import" : "ListTopicsOptions"
      } ],
      "basePackage" : "github.com/IBM/adminrest-go-sdk",
      "allowInsecureConnections" : false,
      "supportsIamTokens" : false,
      "contextPath" : "",
      "appDescription" : "The administration REST API for IBM Event Streams on Cloud.",
      "releaseNote" : "Minor update",
      "version" : "1.1.0",
      "currentVersion" : "2021-02-15",
      "includeExternalConfig" : false,
      "structVarName" : "adminrest",
      "configFileName" : "adminrest_v1.env",
      "svcPackageName" : "adminrestv1",
      "importPath" : "github.com/IBM/adminrest-go-sdk.Default",
      "generatedYear" : "2021",
      "modelPackage" : "",
      "indent" : { },
      "clearIndent" : { },
      "className" : "AdminrestV1",
      "x-gzip-compress-requests" : false,
      "hasModel" : true,
      "generateApis" : true,
      "basePathWithoutHost" : "",
      "textFlowTab" : { },
      "operations" : {
        "classname" : "DefaultAPI",
        "operation" : [ {
          "responseHeaders" : [ {
            "baseName" : "X-Global-Transaction-Id",
            "getter" : "getXGlobalTransactionID",
            "setter" : "setXGlobalTransactionID",
            "description" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated.  In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "XGlobalTransactionID",
            "defaultValueWithParam" : " = data.X-Global-Transaction-Id;",
            "baseType" : "string",
            "unescapedDescription" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated.  In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "XGlobalTransactionID",
            "nameInSnakeCase" : "X_GLOBAL_TRANSACTION_I_D",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "xGlobalTransactionID",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Strict-Transport-Security",
            "getter" : "getStrictTransportSecurity",
            "setter" : "setStrictTransportSecurity",
            "description" : "Specifies a period of time during which the user agent should only access the server using secure HTTPS connections. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "StrictTransportSecurity",
            "defaultValue" : "max-age=31536000; includeSubDomains",
            "defaultValueWithParam" : " = data.Strict-Transport-Security;",
            "baseType" : "string",
            "unescapedDescription" : "Specifies a period of time during which the user agent should only access the server using secure HTTPS connections.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"max-age=31536000; includeSubDomains\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "StrictTransportSecurity",
            "nameInSnakeCase" : "STRICT_TRANSPORT_SECURITY",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "strictTransportSecurity",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Cache-Control",
            "getter" : "getCacheControl",
            "setter" : "setCacheControl",
            "description" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. And the cache should not store anything about the client request or server response. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "CacheControl",
            "defaultValue" : "no-cache, no-store",
            "defaultValueWithParam" : " = data.Cache-Control;",
            "baseType" : "string",
            "unescapedDescription" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. And the cache should not store anything about the client request or server response.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"no-cache, no-store\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "CacheControl",
            "nameInSnakeCase" : "CACHE_CONTROL",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "cacheControl",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Pragma",
            "getter" : "getPragma",
            "setter" : "setPragma",
            "description" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. Same as 'Cache-Control: no-cache'. It is used for backwards compatibility with HTTP/1.0. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "Pragma",
            "defaultValue" : "no-cache",
            "defaultValueWithParam" : " = data.Pragma;",
            "baseType" : "string",
            "unescapedDescription" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. Same as 'Cache-Control: no-cache'. It is used for backwards compatibility with HTTP/1.0.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"no-cache\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "Pragma",
            "nameInSnakeCase" : "PRAGMA",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "pragma",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          } ],
          "hasAuthMethods" : true,
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "hasOptionalParams" : false,
          "hasRequiredParams" : false,
          "returnTypeIsPrimitive" : true,
          "returnSimpleType" : true,
          "subresourceOperation" : false,
          "isMapContainer" : false,
          "isListContainer" : false,
          "isMultipart" : false,
          "hasMore" : true,
          "isResponseBinary" : false,
          "isResponseFile" : false,
          "hasReference" : false,
          "isRestfulIndex" : false,
          "isRestfulShow" : false,
          "isRestfulCreate" : false,
          "isRestfulUpdate" : false,
          "isRestfulDestroy" : false,
          "isRestful" : false,
          "isDeprecated" : false,
          "isCallbackRequest" : false,
          "path" : "/admin/topics",
          "operationId" : "CreateTopic",
          "httpMethod" : "POST",
          "summary" : "Create a new topic",
          "notes" : "Create a new topic.",
          "baseName" : "Default",
          "consumes" : [ {
            "mediaType" : "application/json"
          } ],
          "produces" : [ {
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : true,
            "hasMore" : false,
            "isContainer" : false,
            "secondaryParam" : true,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "topic_create",
            "paramName" : "topicCreate",
            "dataType" : "TopicCreateRequest",
            "description" : "The new topic to be created.",
            "baseType" : "TopicCreateRequest",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "constructBody" : true,
              "x-original-description" : "The new topic to be created.",
              "bodyModelVars" : [ {
                "baseName" : "name",
                "getter" : "GetName",
                "setter" : "SetName",
                "description" : "The name of topic to be created.",
                "dataType" : "string",
                "datatypeWithEnum" : "string",
                "name" : "Name",
                "defaultValueWithParam" : " = data.name;",
                "baseType" : "string",
                "unescapedDescription" : "The name of topic to be created.",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : true,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : true,
                "isPrimitiveType" : true,
                "isModel" : false,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : true,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : {
                  "x-original-description" : "The name of topic to be created.",
                  "x-param-sort-score" : 102005,
                  "x-options-model" : "CreateTopicOptions",
                  "x-body-option" : "name",
                  "x-parameter-type" : "body",
                  "x-param-in-body" : false
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Name",
                "nameInSnakeCase" : "NAME",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "paramName" : "createTopicOptions.Name",
                "varName" : "name",
                "openapiType" : "string",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "string",
                "iexclusiveMaximum" : false
              }, {
                "baseName" : "partitions",
                "getter" : "GetPartitions",
                "setter" : "SetPartitions",
                "description" : "The number of partitions.",
                "dataType" : "int64",
                "datatypeWithEnum" : "int64",
                "dataFormat" : "int64",
                "name" : "Partitions",
                "defaultValueWithParam" : " = data.partitions;",
                "baseType" : "int64",
                "unescapedDescription" : "The number of partitions.",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : true,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : true,
                "isPrimitiveType" : true,
                "isModel" : false,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : false,
                "isNumeric" : true,
                "isInteger" : false,
                "isLong" : true,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : {
                  "x-original-description" : "The number of partitions.",
                  "x-param-sort-score" : 102010,
                  "x-options-model" : "CreateTopicOptions",
                  "x-body-option" : "partitions",
                  "x-parameter-type" : "body",
                  "x-param-in-body" : false
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Partitions",
                "nameInSnakeCase" : "PARTITIONS",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "paramName" : "createTopicOptions.Partitions",
                "varName" : "partitions",
                "openapiType" : "long",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "int64",
                "iexclusiveMaximum" : false
              }, {
                "baseName" : "partition_count",
                "getter" : "GetPartitionCount",
                "setter" : "SetPartitionCount",
                "description" : "The number of partitions, this field takes precedence over 'partitions'. Default value is 1 if not specified.",
                "dataType" : "int64",
                "datatypeWithEnum" : "int64",
                "dataFormat" : "int64",
                "name" : "PartitionCount",
                "defaultValueWithParam" : " = data.partition_count;",
                "baseType" : "int64",
                "unescapedDescription" : "The number of partitions, this field takes precedence over 'partitions'. Default value is 1 if not specified.",
                "minimum" : "1",
                "maximum" : "1000",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : true,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : true,
                "isPrimitiveType" : true,
                "isModel" : false,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : false,
                "isNumeric" : true,
                "isInteger" : false,
                "isLong" : true,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : {
                  "x-original-description" : "The number of partitions, this field takes precedence over 'partitions'. Default value is 1 if not specified.",
                  "x-param-sort-score" : 102015,
                  "x-options-model" : "CreateTopicOptions",
                  "x-body-option" : "partition_count",
                  "x-parameter-type" : "body",
                  "x-param-in-body" : false
                },
                "hasValidation" : true,
                "isInherited" : false,
                "nameInCamelCase" : "PartitionCount",
                "nameInSnakeCase" : "PARTITION_COUNT",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "paramName" : "createTopicOptions.PartitionCount",
                "varName" : "partitionCount",
                "openapiType" : "long",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "int64",
                "iexclusiveMaximum" : false
              }, {
                "baseName" : "configs",
                "complexType" : "ConfigCreate",
                "getter" : "GetConfigs",
                "setter" : "SetConfigs",
                "description" : "The config properties to be set for the new topic.",
                "dataType" : "[]ConfigCreate",
                "datatypeWithEnum" : "[]ConfigCreate",
                "name" : "Configs",
                "defaultValueWithParam" : " = data.configs;",
                "baseType" : "[]",
                "containerType" : "array",
                "unescapedDescription" : "The config properties to be set for the new topic.",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : false,
                "isModel" : false,
                "isContainer" : true,
                "isNotContainer" : false,
                "isString" : false,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : true,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "items" : {
                  "baseName" : "configs",
                  "complexType" : "ConfigCreate",
                  "getter" : "getConfigs",
                  "setter" : "setConfigs",
                  "dataType" : "ConfigCreate",
                  "datatypeWithEnum" : "ConfigCreate",
                  "name" : "Configs",
                  "defaultValueWithParam" : " = data.Configs;",
                  "baseType" : "ConfigCreate",
                  "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/config_create\"\n}",
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "hasMore" : false,
                  "required" : false,
                  "secondaryParam" : false,
                  "hasMoreNonReadOnly" : false,
                  "isPrimitiveType" : false,
                  "isModel" : true,
                  "isContainer" : false,
                  "isNotContainer" : true,
                  "isString" : false,
                  "isNumeric" : false,
                  "isInteger" : false,
                  "isLong" : false,
                  "isNumber" : false,
                  "isFloat" : false,
                  "isDouble" : false,
                  "isByteArray" : false,
                  "isBinary" : false,
                  "isFile" : false,
                  "isBoolean" : false,
                  "isDate" : false,
                  "isDateTime" : false,
                  "isUuid" : false,
                  "isEmail" : false,
                  "isListContainer" : false,
                  "isMapContainer" : false,
                  "isEnum" : false,
                  "isReadOnly" : false,
                  "isWriteOnly" : false,
                  "isNullable" : false,
                  "vendorExtensions" : { },
                  "hasValidation" : false,
                  "isInherited" : false,
                  "nameInCamelCase" : "Configs",
                  "nameInSnakeCase" : "CONFIGS",
                  "isXmlAttribute" : false,
                  "isXmlWrapped" : false,
                  "varName" : "configs",
                  "openapiType" : "config_create",
                  "isDataSourceFilter" : false,
                  "modelIsAbstract" : false,
                  "modelIsDynamic" : false,
                  "modelHasDiscriminator" : false,
                  "isAnyObject" : false,
                  "isAnyType" : false,
                  "isBigDecimal" : false,
                  "modelList" : false,
                  "byteArrayList" : false,
                  "stringMap" : false,
                  "datatype" : "ConfigCreate",
                  "iexclusiveMaximum" : false
                },
                "vendorExtensions" : {
                  "x-original-description" : "The config properties to be set for the new topic.",
                  "x-param-sort-score" : 102020,
                  "x-options-model" : "CreateTopicOptions",
                  "x-body-option" : "configs",
                  "x-parameter-type" : "body",
                  "x-param-in-body" : false
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Configs",
                "nameInSnakeCase" : "CONFIGS",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "paramName" : "createTopicOptions.Configs",
                "varName" : "configs",
                "openapiType" : "array",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : true,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "[]ConfigCreate",
                "iexclusiveMaximum" : false
              } ],
              "x-param-in-options" : true
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 1010,
            "isOptionsParam" : false,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "cookieParams" : [ ],
          "requiredParams" : [ ],
          "optionalParams" : [ ],
          "authMethods" : [ ],
          "tags" : [ {
            "name" : "default"
          } ],
          "responses" : [ ],
          "callbacks" : [ ],
          "imports" : [ "CreateTopicOptions" ],
          "examples" : [ ],
          "requestBodyExamples" : [ ],
          "vendorExtensions" : {
            "x-body-param-info" : {
              "multipleConsumes" : false,
              "bodyParamRequired" : true,
              "contentType" : "\"application/json\"",
              "jsonContent" : "topicCreate",
              "jsonPatchContent" : "nil",
              "content" : "nil",
              "jsonMergePatchContent" : false
            },
            "constructForm" : false,
            "x-original-description" : "Create a new topic.",
            "x-codegen-request-body-name" : "topic_create",
            "x-path-segments" : [ "admin/topics" ],
            "x-validators" : [ ],
            "acceptJSON" : true,
            "x-method-path" : "post /admin/topics"
          },
          "nickname" : "CreateTopic",
          "operationIdOriginal" : "CreateTopic",
          "operationIdLowerCase" : "createtopic",
          "operationIdCamelCase" : "CreateTopic",
          "operationIdSnakeCase" : "create_topic",
          "signature" : "(adminrest *AdminrestV1) CreateTopic(createTopicOptions *CreateTopicOptions) (response *core.DetailedResponse, err error)",
          "alternateSignature" : "(adminrest *AdminrestV1) CreateTopicWithContext(ctx context.Context, createTopicOptions *CreateTopicOptions) (response *core.DetailedResponse, err error)",
          "optionsParam" : {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : true,
            "isContainer" : false,
            "secondaryParam" : false,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "createTopicOptions",
            "paramName" : "createTopicOptions",
            "dataType" : "CreateTopicOptions",
            "description" : "The CreateTopic options.",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-options-model" : "CreateTopicOptions"
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 5,
            "isOptionsParam" : true,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "CreateTopicOptions"
          },
          "sendEmptyBody" : false,
          "hasMultiConsumes" : false,
          "requestModels" : [ {
            "interfaces" : [ ],
            "name" : "CreateTopicOptions",
            "classname" : "CreateTopicOptions",
            "description" : "The CreateTopic options.",
            "classVarName" : "createTopicOptions",
            "dataType" : "interface{}",
            "classFilename" : "CreateTopicOptions",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "name",
              "getter" : "GetName",
              "setter" : "SetName",
              "description" : "The name of topic to be created.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "Name",
              "defaultValueWithParam" : " = data.name;",
              "baseType" : "string",
              "unescapedDescription" : "The name of topic to be created.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The name of topic to be created.",
                "x-param-sort-score" : 102005,
                "x-options-model" : "CreateTopicOptions",
                "x-body-option" : "name",
                "x-parameter-type" : "body",
                "x-param-in-body" : false
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Name",
              "nameInSnakeCase" : "NAME",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "paramName" : "createTopicOptions.Name",
              "varName" : "name",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "partitions",
              "getter" : "GetPartitions",
              "setter" : "SetPartitions",
              "description" : "The number of partitions.",
              "dataType" : "int64",
              "datatypeWithEnum" : "int64",
              "dataFormat" : "int64",
              "name" : "Partitions",
              "defaultValueWithParam" : " = data.partitions;",
              "baseType" : "int64",
              "unescapedDescription" : "The number of partitions.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : true,
              "isInteger" : false,
              "isLong" : true,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The number of partitions.",
                "x-param-sort-score" : 102010,
                "x-options-model" : "CreateTopicOptions",
                "x-body-option" : "partitions",
                "x-parameter-type" : "body",
                "x-param-in-body" : false
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Partitions",
              "nameInSnakeCase" : "PARTITIONS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "paramName" : "createTopicOptions.Partitions",
              "varName" : "partitions",
              "openapiType" : "long",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "int64",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "partition_count",
              "getter" : "GetPartitionCount",
              "setter" : "SetPartitionCount",
              "description" : "The number of partitions, this field takes precedence over 'partitions'. Default value is 1 if not specified.",
              "dataType" : "int64",
              "datatypeWithEnum" : "int64",
              "dataFormat" : "int64",
              "name" : "PartitionCount",
              "defaultValueWithParam" : " = data.partition_count;",
              "baseType" : "int64",
              "unescapedDescription" : "The number of partitions, this field takes precedence over 'partitions'. Default value is 1 if not specified.",
              "minimum" : "1",
              "maximum" : "1000",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : true,
              "isInteger" : false,
              "isLong" : true,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The number of partitions, this field takes precedence over 'partitions'. Default value is 1 if not specified.",
                "x-param-sort-score" : 102015,
                "x-options-model" : "CreateTopicOptions",
                "x-body-option" : "partition_count",
                "x-parameter-type" : "body",
                "x-param-in-body" : false
              },
              "hasValidation" : true,
              "isInherited" : false,
              "nameInCamelCase" : "PartitionCount",
              "nameInSnakeCase" : "PARTITION_COUNT",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "paramName" : "createTopicOptions.PartitionCount",
              "varName" : "partitionCount",
              "openapiType" : "long",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "int64",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "configs",
              "complexType" : "ConfigCreate",
              "getter" : "GetConfigs",
              "setter" : "SetConfigs",
              "description" : "The config properties to be set for the new topic.",
              "dataType" : "[]ConfigCreate",
              "datatypeWithEnum" : "[]ConfigCreate",
              "name" : "Configs",
              "defaultValueWithParam" : " = data.configs;",
              "baseType" : "[]",
              "containerType" : "array",
              "unescapedDescription" : "The config properties to be set for the new topic.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : false,
              "isModel" : false,
              "isContainer" : true,
              "isNotContainer" : false,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : true,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "items" : {
                "baseName" : "configs",
                "complexType" : "ConfigCreate",
                "getter" : "getConfigs",
                "setter" : "setConfigs",
                "dataType" : "ConfigCreate",
                "datatypeWithEnum" : "ConfigCreate",
                "name" : "Configs",
                "defaultValueWithParam" : " = data.Configs;",
                "baseType" : "ConfigCreate",
                "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/config_create\"\n}",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : false,
                "isModel" : true,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : false,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : { },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Configs",
                "nameInSnakeCase" : "CONFIGS",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "varName" : "configs",
                "openapiType" : "config_create",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "ConfigCreate",
                "iexclusiveMaximum" : false
              },
              "vendorExtensions" : {
                "x-original-description" : "The config properties to be set for the new topic.",
                "x-param-sort-score" : 102020,
                "x-options-model" : "CreateTopicOptions",
                "x-body-option" : "configs",
                "x-parameter-type" : "body",
                "x-param-in-body" : false
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Configs",
              "nameInSnakeCase" : "CONFIGS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "paramName" : "createTopicOptions.Configs",
              "varName" : "configs",
              "openapiType" : "array",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : true,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "[]ConfigCreate",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ "ConfigCreate", "[]" ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-java-builder" : true,
              "x-is-options-model" : true,
              "x-content-types" : [ "application/json" ]
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : true,
            "isRequestModel" : true,
            "isResponseModel" : false,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          }, {
            "interfaces" : [ ],
            "name" : "config_create",
            "classname" : "ConfigCreate",
            "classVarName" : "configCreate",
            "dataType" : "interface{}",
            "classFilename" : "ConfigCreate",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "name",
              "getter" : "GetName",
              "setter" : "SetName",
              "description" : "The name of the config property.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "Name",
              "defaultValueWithParam" : " = data.name;",
              "baseType" : "string",
              "unescapedDescription" : "The name of the config property.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The name of the config property."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Name",
              "nameInSnakeCase" : "NAME",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "name",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "value",
              "getter" : "GetValue",
              "setter" : "SetValue",
              "description" : "The value for a config property.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "Value",
              "defaultValueWithParam" : " = data.value;",
              "baseType" : "string",
              "unescapedDescription" : "The value for a config property.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value for a config property."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Value",
              "nameInSnakeCase" : "VALUE",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "value",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-java-builder" : true
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : false,
            "isRequestModel" : true,
            "isResponseModel" : false,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          } ],
          "hasFormParams" : false,
          "hasQueryParams" : false,
          "hasBodyParam" : false,
          "hasHeaderParams" : false,
          "hasPathParams" : false,
          "hasCookieParams" : false,
          "hasResponseHeaders" : true,
          "hasExamples" : false,
          "bodyAllowed" : true,
          "restfulShow" : false,
          "restfulIndex" : false,
          "restfulCreate" : false,
          "restfulUpdate" : false,
          "restfulDestroy" : false,
          "restful" : false
        }, {
          "responseHeaders" : [ {
            "baseName" : "X-Global-Transaction-Id",
            "getter" : "getXGlobalTransactionID",
            "setter" : "setXGlobalTransactionID",
            "description" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated.  In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "XGlobalTransactionID",
            "defaultValueWithParam" : " = data.X-Global-Transaction-Id;",
            "baseType" : "string",
            "unescapedDescription" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated.  In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "XGlobalTransactionID",
            "nameInSnakeCase" : "X_GLOBAL_TRANSACTION_I_D",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "xGlobalTransactionID",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Strict-Transport-Security",
            "getter" : "getStrictTransportSecurity",
            "setter" : "setStrictTransportSecurity",
            "description" : "Specifies a period of time during which the user agent should only access the server using secure HTTPS connections. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "StrictTransportSecurity",
            "defaultValue" : "max-age=31536000; includeSubDomains",
            "defaultValueWithParam" : " = data.Strict-Transport-Security;",
            "baseType" : "string",
            "unescapedDescription" : "Specifies a period of time during which the user agent should only access the server using secure HTTPS connections.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"max-age=31536000; includeSubDomains\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "StrictTransportSecurity",
            "nameInSnakeCase" : "STRICT_TRANSPORT_SECURITY",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "strictTransportSecurity",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Cache-Control",
            "getter" : "getCacheControl",
            "setter" : "setCacheControl",
            "description" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. And the cache should not store anything about the client request or server response. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "CacheControl",
            "defaultValue" : "no-cache, no-store",
            "defaultValueWithParam" : " = data.Cache-Control;",
            "baseType" : "string",
            "unescapedDescription" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. And the cache should not store anything about the client request or server response.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"no-cache, no-store\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "CacheControl",
            "nameInSnakeCase" : "CACHE_CONTROL",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "cacheControl",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Pragma",
            "getter" : "getPragma",
            "setter" : "setPragma",
            "description" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. Same as 'Cache-Control: no-cache'. It is used for backwards compatibility with HTTP/1.0. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "Pragma",
            "defaultValue" : "no-cache",
            "defaultValueWithParam" : " = data.Pragma;",
            "baseType" : "string",
            "unescapedDescription" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. Same as 'Cache-Control: no-cache'. It is used for backwards compatibility with HTTP/1.0.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"no-cache\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "Pragma",
            "nameInSnakeCase" : "PRAGMA",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "pragma",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "X-Total-Count",
            "getter" : "getXTotalCount",
            "setter" : "setXTotalCount",
            "description" : "The total number of topics available.",
            "dataType" : "int64",
            "datatypeWithEnum" : "int64",
            "name" : "XTotalCount",
            "defaultValueWithParam" : " = data.X-Total-Count;",
            "baseType" : "int64",
            "unescapedDescription" : "The total number of topics available.",
            "jsonSchema" : "{\n  \"type\" : \"integer\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : false,
            "isNumeric" : true,
            "isInteger" : true,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "XTotalCount",
            "nameInSnakeCase" : "X_TOTAL_COUNT",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "xTotalCount",
            "openapiType" : "integer",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "int64",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Link",
            "getter" : "getLink",
            "setter" : "setLink",
            "description" : "The client can scroll through pages using the links generated in the Link header. There are 4 links encoded in the header which represent the first, last, next and previous operations. An example header is Link: <http://kafka.admin.host/admin/topics?page=2&per_page=20>; rel=\\\"next\\\", <http://kafka.admin.host/admin/topics?page=1&per_page=20>; rel=\\\"first\\\", <http://kafka.admin.host/admin/topics?page=5&per_page=20>; rel=\\\"last\\\" ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "Link",
            "defaultValueWithParam" : " = data.Link;",
            "baseType" : "string",
            "unescapedDescription" : "The client can scroll through pages using the links generated in the Link header. There are 4 links encoded in the header which represent the first, last, next and previous operations. An example header is Link: <http://kafka.admin.host/admin/topics?page=2&per_page=20>; rel=\"next\", <http://kafka.admin.host/admin/topics?page=1&per_page=20>; rel=\"first\", <http://kafka.admin.host/admin/topics?page=5&per_page=20>; rel=\"last\"\n",
            "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "Link",
            "nameInSnakeCase" : "LINK",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "link",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          } ],
          "hasAuthMethods" : true,
          "hasConsumes" : false,
          "hasProduces" : true,
          "hasParams" : true,
          "hasOptionalParams" : false,
          "hasRequiredParams" : false,
          "returnTypeIsPrimitive" : false,
          "returnSimpleType" : false,
          "subresourceOperation" : false,
          "isMapContainer" : false,
          "isListContainer" : true,
          "isMultipart" : false,
          "hasMore" : true,
          "isResponseBinary" : false,
          "isResponseFile" : false,
          "hasReference" : false,
          "isRestfulIndex" : false,
          "isRestfulShow" : false,
          "isRestfulCreate" : false,
          "isRestfulUpdate" : false,
          "isRestfulDestroy" : false,
          "isRestful" : false,
          "isDeprecated" : false,
          "isCallbackRequest" : false,
          "path" : "/admin/topics",
          "operationId" : "ListTopics",
          "returnType" : "[]TopicDetail",
          "httpMethod" : "GET",
          "returnBaseType" : "TopicDetail",
          "returnContainer" : "array",
          "summary" : "Get a list of topics",
          "notes" : "Returns a list containing information about all of the Kafka topics that are defined for an instance of the Event Streams service. If there are currently no topics defined then an empty list is returned.",
          "baseName" : "Default",
          "produces" : [ {
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : false,
            "isQueryParam" : true,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : true,
            "isContainer" : false,
            "secondaryParam" : false,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "baseName" : "topic_filter",
            "paramName" : "listTopicsOptions.TopicFilter",
            "dataType" : "string",
            "description" : "A filter to be applied to the topic names. A simple filter can be specified as a string with asterisk (`*`) wildcards representing 0 or more characters, e.g. `topic-name*` will filter all topic names that begin with the string `topic-name` followed by any character sequence. A more complex filter pattern can be used by surrounding a regular expression in forward slash (`/`) delimiters, e.g. `/topic-name.* /`.",
            "unescapedDescription" : "A filter to be applied to the topic names. A simple filter can be specified as a string with asterisk (`*`) wildcards representing 0 or more characters, e.g. `topic-name*` will filter all topic names that begin with the string `topic-name` followed by any character sequence. A more complex filter pattern can be used by surrounding a regular expression in forward slash (`/`) delimiters, e.g. `/topic-name.* /`.\n",
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-original-description" : "A filter to be applied to the topic names. A simple filter can be specified as a string with asterisk (`*`) wildcards representing 0 or more characters, e.g. `topic-name*` will filter all topic names that begin with the string `topic-name` followed by any character sequence. A more complex filter pattern can be used by surrounding a regular expression in forward slash (`/`) delimiters, e.g. `/topic-name.* /`.\n",
              "x-param-in-options" : true
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : false,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 103005,
            "isOptionsParam" : false,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "string"
          }, {
            "isFormParam" : false,
            "isQueryParam" : true,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : true,
            "isContainer" : false,
            "secondaryParam" : true,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "baseName" : "per_page",
            "paramName" : "listTopicsOptions.PerPage",
            "dataType" : "int64",
            "description" : "The number of topic names to be returns.",
            "unescapedDescription" : "The number of topic names to be returns.",
            "isString" : false,
            "isNumeric" : true,
            "isInteger" : true,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-original-description" : "The number of topic names to be returns.",
              "x-param-in-options" : true
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : false,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 103010,
            "isOptionsParam" : false,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "integer"
          }, {
            "isFormParam" : false,
            "isQueryParam" : true,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : true,
            "isContainer" : false,
            "secondaryParam" : true,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "baseName" : "page",
            "paramName" : "listTopicsOptions.Page",
            "dataType" : "int64",
            "description" : "The page number to be returned. The number 1 represents the first page. The default value is 1.",
            "unescapedDescription" : "The page number to be returned. The number 1 represents the first page. The default value is 1.\n",
            "isString" : false,
            "isNumeric" : true,
            "isInteger" : true,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-original-description" : "The page number to be returned. The number 1 represents the first page. The default value is 1.\n",
              "x-param-in-options" : true
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : false,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 103015,
            "isOptionsParam" : false,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "integer"
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "cookieParams" : [ ],
          "requiredParams" : [ ],
          "optionalParams" : [ ],
          "authMethods" : [ ],
          "tags" : [ {
            "name" : "default"
          } ],
          "responses" : [ ],
          "callbacks" : [ ],
          "imports" : [ "TopicDetail", "ListTopicsOptions" ],
          "examples" : [ ],
          "requestBodyExamples" : [ ],
          "vendorExtensions" : {
            "acceptJSON" : true,
            "constructForm" : false,
            "x-original-description" : "Returns a list containing information about all of the Kafka topics that are defined for an instance of the Event Streams service. If there are currently no topics defined then an empty list is returned.\n",
            "x-path-segments" : [ "admin/topics" ],
            "x-method-path" : "get /admin/topics",
            "x-validators" : [ ]
          },
          "nickname" : "ListTopics",
          "operationIdOriginal" : "ListTopics",
          "operationIdLowerCase" : "listtopics",
          "operationIdCamelCase" : "ListTopics",
          "operationIdSnakeCase" : "list_topics",
          "signature" : "(adminrest *AdminrestV1) ListTopics(listTopicsOptions *ListTopicsOptions) (result []TopicDetail, response *core.DetailedResponse, err error)",
          "alternateSignature" : "(adminrest *AdminrestV1) ListTopicsWithContext(ctx context.Context, listTopicsOptions *ListTopicsOptions) (result []TopicDetail, response *core.DetailedResponse, err error)",
          "optionsParam" : {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : false,
            "isContainer" : false,
            "secondaryParam" : true,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "listTopicsOptions",
            "paramName" : "listTopicsOptions",
            "dataType" : "ListTopicsOptions",
            "description" : "The ListTopics options.",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-options-model" : "ListTopicsOptions"
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : false,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 103020,
            "isOptionsParam" : true,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "ListTopicsOptions"
          },
          "sendEmptyBody" : false,
          "hasMultiConsumes" : false,
          "operationResponse" : {
            "baseName" : "[]TopicDetail",
            "complexType" : "TopicDetail",
            "getter" : "getTopicDetail",
            "setter" : "setTopicDetail",
            "description" : "A list of 'topic_detail' is returned.",
            "dataType" : "[]TopicDetail",
            "datatypeWithEnum" : "[]TopicDetail",
            "name" : "TopicDetail",
            "defaultValueWithParam" : " = data.[]TopicDetail;",
            "baseType" : "[]",
            "containerType" : "array",
            "unescapedDescription" : "A list of 'topic_detail' is returned.",
            "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"description\" : \"A list of 'topic_detail' is returned.\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/topic_detail\"\n  },\n  \"x-original-description\" : \"A list of 'topic_detail' is returned.\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : false,
            "isModel" : false,
            "isContainer" : true,
            "isNotContainer" : false,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : true,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "items" : {
              "baseName" : "[]TopicDetail",
              "complexType" : "TopicDetail",
              "getter" : "getTopicDetail",
              "setter" : "setTopicDetail",
              "dataType" : "TopicDetail",
              "datatypeWithEnum" : "TopicDetail",
              "name" : "TopicDetail",
              "defaultValueWithParam" : " = data.TopicDetail;",
              "baseType" : "TopicDetail",
              "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/topic_detail\"\n}",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : false,
              "isModel" : true,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : { },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "TopicDetail",
              "nameInSnakeCase" : "TOPIC_DETAIL",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "topicDetail",
              "openapiType" : "topic_detail",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "TopicDetail",
              "iexclusiveMaximum" : false
            },
            "mostInnerItems" : {
              "baseName" : "[]TopicDetail",
              "complexType" : "TopicDetail",
              "getter" : "getTopicDetail",
              "setter" : "setTopicDetail",
              "dataType" : "TopicDetail",
              "datatypeWithEnum" : "TopicDetail",
              "name" : "TopicDetail",
              "defaultValueWithParam" : " = data.TopicDetail;",
              "baseType" : "TopicDetail",
              "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/topic_detail\"\n}",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : false,
              "isModel" : true,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : { },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "TopicDetail",
              "nameInSnakeCase" : "TOPIC_DETAIL",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "topicDetail",
              "openapiType" : "topic_detail",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "TopicDetail",
              "iexclusiveMaximum" : false
            },
            "vendorExtensions" : {
              "x-original-description" : "A list of 'topic_detail' is returned."
            },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "TopicDetail",
            "nameInSnakeCase" : "TOPIC_DETAIL",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "topicDetail",
            "openapiType" : "array",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "propInfo" : {
              "modelFieldName" : "TopicDetail",
              "modelFieldDatatype" : "[]TopicDetail",
              "unmarshaller" : "UnmarshalTopicDetail",
              "modelDatatypePrefix" : "",
              "setterDatatypePrefix" : "",
              "setterParamName" : "topicDetail",
              "setterAssignmentParamName" : "topicDetail",
              "goFieldAnnotation" : "json:\"[]TopicDetail,omitempty\""
            },
            "modelList" : true,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "[]TopicDetail",
            "iexclusiveMaximum" : false
          },
          "requestModels" : [ {
            "interfaces" : [ ],
            "name" : "ListTopicsOptions",
            "classname" : "ListTopicsOptions",
            "description" : "The ListTopics options.",
            "classVarName" : "listTopicsOptions",
            "dataType" : "interface{}",
            "classFilename" : "ListTopicsOptions",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "topic_filter",
              "getter" : "GetTopicFilter",
              "setter" : "SetTopicFilter",
              "description" : "A filter to be applied to the topic names. A simple filter can be specified as a string with asterisk (`*`) wildcards representing 0 or more characters, e.g. `topic-name*` will filter all topic names that begin with the string `topic-name` followed by any character sequence. A more complex filter pattern can be used by surrounding a regular expression in forward slash (`/`) delimiters, e.g. `/topic-name.* /`.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "TopicFilter",
              "defaultValueWithParam" : " = data.topic_filter;",
              "baseType" : "string",
              "unescapedDescription" : "A filter to be applied to the topic names. A simple filter can be specified as a string with asterisk (`*`) wildcards representing 0 or more characters, e.g. `topic-name*` will filter all topic names that begin with the string `topic-name` followed by any character sequence. A more complex filter pattern can be used by surrounding a regular expression in forward slash (`/`) delimiters, e.g. `/topic-name.* /`.\n",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "A filter to be applied to the topic names. A simple filter can be specified as a string with asterisk (`*`) wildcards representing 0 or more characters, e.g. `topic-name*` will filter all topic names that begin with the string `topic-name` followed by any character sequence. A more complex filter pattern can be used by surrounding a regular expression in forward slash (`/`) delimiters, e.g. `/topic-name.* /`.\n",
                "x-options-model" : "ListTopicsOptions",
                "x-param-sort-score" : 103005,
                "x-schema-prop-required" : false,
                "x-parameter-type" : "query",
                "x-param-in-body" : false,
                "x-param-in-options" : true
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "TopicFilter",
              "nameInSnakeCase" : "TOPIC_FILTER",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "topicFilter",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "per_page",
              "getter" : "GetPerPage",
              "setter" : "SetPerPage",
              "description" : "The number of topic names to be returns.",
              "dataType" : "int64",
              "datatypeWithEnum" : "int64",
              "name" : "PerPage",
              "defaultValueWithParam" : " = data.per_page;",
              "baseType" : "int64",
              "unescapedDescription" : "The number of topic names to be returns.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : true,
              "isInteger" : true,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The number of topic names to be returns.",
                "x-options-model" : "ListTopicsOptions",
                "x-param-sort-score" : 103010,
                "x-schema-prop-required" : false,
                "x-parameter-type" : "query",
                "x-param-in-body" : false,
                "x-param-in-options" : true
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "PerPage",
              "nameInSnakeCase" : "PER_PAGE",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "perPage",
              "openapiType" : "integer",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "int64",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "page",
              "getter" : "GetPage",
              "setter" : "SetPage",
              "description" : "The page number to be returned. The number 1 represents the first page. The default value is 1.",
              "dataType" : "int64",
              "datatypeWithEnum" : "int64",
              "name" : "Page",
              "defaultValueWithParam" : " = data.page;",
              "baseType" : "int64",
              "unescapedDescription" : "The page number to be returned. The number 1 represents the first page. The default value is 1.\n",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : true,
              "isInteger" : true,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The page number to be returned. The number 1 represents the first page. The default value is 1.\n",
                "x-options-model" : "ListTopicsOptions",
                "x-param-sort-score" : 103015,
                "x-schema-prop-required" : false,
                "x-parameter-type" : "query",
                "x-param-in-body" : false,
                "x-param-in-options" : true
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Page",
              "nameInSnakeCase" : "PAGE",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "page",
              "openapiType" : "integer",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "int64",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-java-builder" : true,
              "x-is-options-model" : true,
              "x-content-types" : [ ]
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : true,
            "isRequestModel" : true,
            "isResponseModel" : false,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          } ],
          "responseModels" : [ ],
          "hasFormParams" : false,
          "hasQueryParams" : false,
          "hasBodyParam" : false,
          "hasHeaderParams" : false,
          "hasPathParams" : false,
          "hasCookieParams" : false,
          "hasResponseHeaders" : true,
          "hasExamples" : false,
          "bodyAllowed" : false,
          "restfulShow" : false,
          "restfulIndex" : false,
          "restfulCreate" : false,
          "restfulUpdate" : false,
          "restfulDestroy" : false,
          "restful" : false
        }, {
          "responseHeaders" : [ {
            "baseName" : "X-Global-Transaction-Id",
            "getter" : "getXGlobalTransactionID",
            "setter" : "setXGlobalTransactionID",
            "description" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated.  In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'.  ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "XGlobalTransactionID",
            "defaultValueWithParam" : " = data.X-Global-Transaction-Id;",
            "baseType" : "string",
            "unescapedDescription" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated.  In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'. \n",
            "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "XGlobalTransactionID",
            "nameInSnakeCase" : "X_GLOBAL_TRANSACTION_I_D",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "xGlobalTransactionID",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Strict-Transport-Security",
            "getter" : "getStrictTransportSecurity",
            "setter" : "setStrictTransportSecurity",
            "description" : "Specifies a period of time during which the user agent should only access the server using secure HTTPS connections. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "StrictTransportSecurity",
            "defaultValue" : "max-age=31536000; includeSubDomains",
            "defaultValueWithParam" : " = data.Strict-Transport-Security;",
            "baseType" : "string",
            "unescapedDescription" : "Specifies a period of time during which the user agent should only access the server using secure HTTPS connections.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"max-age=31536000; includeSubDomains\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "StrictTransportSecurity",
            "nameInSnakeCase" : "STRICT_TRANSPORT_SECURITY",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "strictTransportSecurity",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Cache-Control",
            "getter" : "getCacheControl",
            "setter" : "setCacheControl",
            "description" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. And the cache should not store anything about the client request or server response. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "CacheControl",
            "defaultValue" : "no-cache, no-store",
            "defaultValueWithParam" : " = data.Cache-Control;",
            "baseType" : "string",
            "unescapedDescription" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. And the cache should not store anything about the client request or server response.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"no-cache, no-store\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "CacheControl",
            "nameInSnakeCase" : "CACHE_CONTROL",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "cacheControl",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Pragma",
            "getter" : "getPragma",
            "setter" : "setPragma",
            "description" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. Same as 'Cache-Control: no-cache'. It is used for backwards compatibility with HTTP/1.0. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "Pragma",
            "defaultValue" : "no-cache",
            "defaultValueWithParam" : " = data.Pragma;",
            "baseType" : "string",
            "unescapedDescription" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. Same as 'Cache-Control: no-cache'. It is used for backwards compatibility with HTTP/1.0.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"no-cache\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "Pragma",
            "nameInSnakeCase" : "PRAGMA",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "pragma",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          } ],
          "hasAuthMethods" : true,
          "hasConsumes" : false,
          "hasProduces" : true,
          "hasParams" : true,
          "hasOptionalParams" : false,
          "hasRequiredParams" : false,
          "returnTypeIsPrimitive" : false,
          "returnSimpleType" : true,
          "subresourceOperation" : false,
          "isMapContainer" : false,
          "isListContainer" : false,
          "isMultipart" : false,
          "hasMore" : true,
          "isResponseBinary" : false,
          "isResponseFile" : false,
          "hasReference" : false,
          "isRestfulIndex" : false,
          "isRestfulShow" : false,
          "isRestfulCreate" : false,
          "isRestfulUpdate" : false,
          "isRestfulDestroy" : false,
          "isRestful" : false,
          "isDeprecated" : false,
          "isCallbackRequest" : false,
          "path" : "/admin/topics/{topic_name}",
          "operationId" : "GetTopic",
          "returnType" : "TopicDetail",
          "httpMethod" : "GET",
          "returnBaseType" : "TopicDetail",
          "summary" : "Get detailed information on a topic",
          "notes" : "Get detailed information on a topic.",
          "baseName" : "Default",
          "produces" : [ {
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : true,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : true,
            "isContainer" : false,
            "secondaryParam" : false,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "baseName" : "topic_name",
            "paramName" : "getTopicOptions.TopicName",
            "dataType" : "string",
            "description" : "The topic name for the topic to be listed.",
            "unescapedDescription" : "The topic name for the topic to be listed.",
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-original-description" : "The topic name for the topic to be listed.",
              "x-param-in-options" : true
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 5,
            "isOptionsParam" : false,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "string"
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "cookieParams" : [ ],
          "requiredParams" : [ ],
          "optionalParams" : [ ],
          "authMethods" : [ ],
          "tags" : [ {
            "name" : "default"
          } ],
          "responses" : [ ],
          "callbacks" : [ ],
          "imports" : [ "GetTopicOptions", "TopicDetail" ],
          "examples" : [ ],
          "requestBodyExamples" : [ ],
          "vendorExtensions" : {
            "acceptJSON" : true,
            "constructForm" : false,
            "x-original-description" : "Get detailed information on a topic.",
            "x-path-segments" : [ "admin/topics" ],
            "x-method-path" : "get /admin/topics/{topic_name}",
            "x-validators" : [ ]
          },
          "nickname" : "GetTopic",
          "operationIdOriginal" : "GetTopic",
          "operationIdLowerCase" : "gettopic",
          "operationIdCamelCase" : "GetTopic",
          "operationIdSnakeCase" : "get_topic",
          "signature" : "(adminrest *AdminrestV1) GetTopic(getTopicOptions *GetTopicOptions) (result *TopicDetail, response *core.DetailedResponse, err error)",
          "alternateSignature" : "(adminrest *AdminrestV1) GetTopicWithContext(ctx context.Context, getTopicOptions *GetTopicOptions) (result *TopicDetail, response *core.DetailedResponse, err error)",
          "optionsParam" : {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : false,
            "isContainer" : false,
            "secondaryParam" : true,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "getTopicOptions",
            "paramName" : "getTopicOptions",
            "dataType" : "GetTopicOptions",
            "description" : "The GetTopic options.",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-options-model" : "GetTopicOptions"
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 10,
            "isOptionsParam" : true,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "GetTopicOptions"
          },
          "sendEmptyBody" : false,
          "hasMultiConsumes" : false,
          "operationResponse" : {
            "baseName" : "TopicDetail",
            "complexType" : "TopicDetail",
            "getter" : "getTopicDetail",
            "setter" : "setTopicDetail",
            "dataType" : "TopicDetail",
            "datatypeWithEnum" : "TopicDetail",
            "name" : "TopicDetail",
            "defaultValueWithParam" : " = data.TopicDetail;",
            "baseType" : "TopicDetail",
            "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/topic_detail\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "TopicDetail",
            "nameInSnakeCase" : "TOPIC_DETAIL",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "topicDetail",
            "openapiType" : "topic_detail",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "propInfo" : {
              "modelFieldName" : "TopicDetail",
              "modelFieldDatatype" : "*TopicDetail",
              "unmarshaller" : "UnmarshalTopicDetail",
              "modelDatatypePrefix" : "*",
              "setterDatatypePrefix" : "*",
              "setterParamName" : "topicDetail",
              "setterAssignmentParamName" : "topicDetail",
              "goFieldAnnotation" : "json:\"TopicDetail,omitempty\""
            },
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "TopicDetail",
            "iexclusiveMaximum" : false
          },
          "requestModels" : [ {
            "interfaces" : [ ],
            "name" : "GetTopicOptions",
            "classname" : "GetTopicOptions",
            "description" : "The GetTopic options.",
            "classVarName" : "getTopicOptions",
            "dataType" : "interface{}",
            "classFilename" : "GetTopicOptions",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "topic_name",
              "getter" : "GetTopicName",
              "setter" : "SetTopicName",
              "description" : "The topic name for the topic to be listed.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "TopicName",
              "defaultValueWithParam" : " = data.topic_name;",
              "baseType" : "string",
              "unescapedDescription" : "The topic name for the topic to be listed.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : true,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-require-nonempty" : true,
                "x-original-description" : "The topic name for the topic to be listed.",
                "x-options-model" : "GetTopicOptions",
                "x-param-sort-score" : 5,
                "x-schema-prop-required" : true,
                "x-parameter-type" : "path",
                "x-param-in-body" : false,
                "x-param-in-options" : true
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "TopicName",
              "nameInSnakeCase" : "TOPIC_NAME",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "topicName",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ "topic_name" ],
            "allMandatory" : [ "topic_name" ],
            "imports" : [ ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : true,
            "hasOptional" : false,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-java-builder" : true,
              "x-is-options-model" : true,
              "hasParams" : true,
              "x-content-types" : [ ],
              "unitTestCtorParamsList" : "topicName",
              "ctorParamsList" : "topicName string"
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : true,
            "isRequestModel" : true,
            "isResponseModel" : false,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          } ],
          "responseModels" : [ {
            "interfaces" : [ ],
            "name" : "topic_detail",
            "classname" : "TopicDetail",
            "classVarName" : "topicDetail",
            "dataType" : "interface{}",
            "classFilename" : "TopicDetail",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "name",
              "getter" : "GetName",
              "setter" : "SetName",
              "description" : "The name of the topic.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "Name",
              "defaultValueWithParam" : " = data.name;",
              "baseType" : "string",
              "unescapedDescription" : "The name of the topic.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The name of the topic."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Name",
              "nameInSnakeCase" : "NAME",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "name",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "partitions",
              "getter" : "GetPartitions",
              "setter" : "SetPartitions",
              "description" : "The number of partitions.",
              "dataType" : "int64",
              "datatypeWithEnum" : "int64",
              "name" : "Partitions",
              "defaultValueWithParam" : " = data.partitions;",
              "baseType" : "int64",
              "unescapedDescription" : "The number of partitions.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : true,
              "isInteger" : true,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The number of partitions."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Partitions",
              "nameInSnakeCase" : "PARTITIONS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "partitions",
              "openapiType" : "integer",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "int64",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "replicationFactor",
              "getter" : "GetReplicationFactor",
              "setter" : "SetReplicationFactor",
              "description" : "The number of replication factor.",
              "dataType" : "int64",
              "datatypeWithEnum" : "int64",
              "name" : "ReplicationFactor",
              "defaultValueWithParam" : " = data.replicationFactor;",
              "baseType" : "int64",
              "unescapedDescription" : "The number of replication factor.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : true,
              "isInteger" : true,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The number of replication factor."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "ReplicationFactor",
              "nameInSnakeCase" : "REPLICATION_FACTOR",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "replicationFactor",
              "openapiType" : "integer",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "int64",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "retentionMs",
              "getter" : "GetRetentionMs",
              "setter" : "SetRetentionMs",
              "description" : "The value of config property 'retention.ms'.",
              "dataType" : "int64",
              "datatypeWithEnum" : "int64",
              "name" : "RetentionMs",
              "defaultValueWithParam" : " = data.retentionMs;",
              "baseType" : "int64",
              "unescapedDescription" : "The value of config property 'retention.ms'.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : true,
              "isInteger" : true,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value of config property 'retention.ms'."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "RetentionMs",
              "nameInSnakeCase" : "RETENTION_MS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "retentionMs",
              "openapiType" : "integer",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "int64",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "cleanupPolicy",
              "getter" : "GetCleanupPolicy",
              "setter" : "SetCleanupPolicy",
              "description" : "The value of config property 'cleanup.policy'.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "CleanupPolicy",
              "defaultValueWithParam" : " = data.cleanupPolicy;",
              "baseType" : "string",
              "unescapedDescription" : "The value of config property 'cleanup.policy'.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value of config property 'cleanup.policy'."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "CleanupPolicy",
              "nameInSnakeCase" : "CLEANUP_POLICY",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "cleanupPolicy",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "configs",
              "complexType" : "TopicConfigs",
              "getter" : "GetConfigs",
              "setter" : "SetConfigs",
              "dataType" : "TopicConfigs",
              "datatypeWithEnum" : "TopicConfigs",
              "name" : "Configs",
              "defaultValueWithParam" : " = data.configs;",
              "baseType" : "TopicConfigs",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : false,
              "isModel" : true,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : { },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Configs",
              "nameInSnakeCase" : "CONFIGS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "configs",
              "openapiType" : "topic_configs",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "TopicConfigs",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "replicaAssignments",
              "complexType" : "ReplicaAssignment",
              "getter" : "GetReplicaAssignments",
              "setter" : "SetReplicaAssignments",
              "description" : "The replia assignment of the topic.",
              "dataType" : "[]ReplicaAssignment",
              "datatypeWithEnum" : "[]ReplicaAssignment",
              "name" : "ReplicaAssignments",
              "defaultValueWithParam" : " = data.replicaAssignments;",
              "baseType" : "[]",
              "containerType" : "array",
              "unescapedDescription" : "The replia assignment of the topic.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : false,
              "isModel" : false,
              "isContainer" : true,
              "isNotContainer" : false,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : true,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "items" : {
                "baseName" : "replicaAssignments",
                "complexType" : "ReplicaAssignment",
                "getter" : "getReplicaAssignments",
                "setter" : "setReplicaAssignments",
                "dataType" : "ReplicaAssignment",
                "datatypeWithEnum" : "ReplicaAssignment",
                "name" : "ReplicaAssignments",
                "defaultValueWithParam" : " = data.ReplicaAssignments;",
                "baseType" : "ReplicaAssignment",
                "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/replica_assignment\"\n}",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : false,
                "isModel" : true,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : false,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : { },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "ReplicaAssignments",
                "nameInSnakeCase" : "REPLICA_ASSIGNMENTS",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "varName" : "replicaAssignments",
                "openapiType" : "replica_assignment",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "ReplicaAssignment",
                "iexclusiveMaximum" : false
              },
              "vendorExtensions" : {
                "x-original-description" : "The replia assignment of the topic."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "ReplicaAssignments",
              "nameInSnakeCase" : "REPLICA_ASSIGNMENTS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "replicaAssignments",
              "openapiType" : "array",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : true,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "[]ReplicaAssignment",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ "ReplicaAssignment", "TopicConfigs", "[]" ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : { },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : false,
            "isRequestModel" : false,
            "isResponseModel" : true,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          }, {
            "interfaces" : [ ],
            "name" : "topic_configs",
            "classname" : "TopicConfigs",
            "classVarName" : "topicConfigs",
            "dataType" : "interface{}",
            "classFilename" : "TopicConfigs",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "cleanup.policy",
              "getter" : "GetCleanupPolicy",
              "setter" : "SetCleanupPolicy",
              "description" : "The value of config property 'cleanup.policy'.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "CleanupPolicy",
              "defaultValueWithParam" : " = data.cleanup.policy;",
              "baseType" : "string",
              "unescapedDescription" : "The value of config property 'cleanup.policy'.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value of config property 'cleanup.policy'."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "CleanupPolicy",
              "nameInSnakeCase" : "CLEANUP_POLICY",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "cleanupPolicy",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "min.insync.replicas",
              "getter" : "GetMinInsyncReplicas",
              "setter" : "SetMinInsyncReplicas",
              "description" : "The value of config property 'min.insync.replicas'.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "MinInsyncReplicas",
              "defaultValueWithParam" : " = data.min.insync.replicas;",
              "baseType" : "string",
              "unescapedDescription" : "The value of config property 'min.insync.replicas'",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value of config property 'min.insync.replicas'"
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "MinInsyncReplicas",
              "nameInSnakeCase" : "MIN_INSYNC_REPLICAS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "minInsyncReplicas",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "retention.bytes",
              "getter" : "GetRetentionBytes",
              "setter" : "SetRetentionBytes",
              "description" : "The value of config property 'retention.bytes'.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "RetentionBytes",
              "defaultValueWithParam" : " = data.retention.bytes;",
              "baseType" : "string",
              "unescapedDescription" : "The value of config property 'retention.bytes'.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value of config property 'retention.bytes'."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "RetentionBytes",
              "nameInSnakeCase" : "RETENTION_BYTES",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "retentionBytes",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "retention.ms",
              "getter" : "GetRetentionMs",
              "setter" : "SetRetentionMs",
              "description" : "The value of config property 'retention.ms'.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "RetentionMs",
              "defaultValueWithParam" : " = data.retention.ms;",
              "baseType" : "string",
              "unescapedDescription" : "The value of config property 'retention.ms'",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value of config property 'retention.ms'"
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "RetentionMs",
              "nameInSnakeCase" : "RETENTION_MS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "retentionMs",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "segment.bytes",
              "getter" : "GetSegmentBytes",
              "setter" : "SetSegmentBytes",
              "description" : "The value of config property 'segment.bytes'.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "SegmentBytes",
              "defaultValueWithParam" : " = data.segment.bytes;",
              "baseType" : "string",
              "unescapedDescription" : "The value of config property 'segment.bytes'.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value of config property 'segment.bytes'."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "SegmentBytes",
              "nameInSnakeCase" : "SEGMENT_BYTES",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "segmentBytes",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "segment.index.bytes",
              "getter" : "GetSegmentIndexBytes",
              "setter" : "SetSegmentIndexBytes",
              "description" : "The value of config property 'segment.index.bytes'.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "SegmentIndexBytes",
              "defaultValueWithParam" : " = data.segment.index.bytes;",
              "baseType" : "string",
              "unescapedDescription" : "The value of config property 'segment.index.bytes'.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value of config property 'segment.index.bytes'."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "SegmentIndexBytes",
              "nameInSnakeCase" : "SEGMENT_INDEX_BYTES",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "segmentIndexBytes",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "segment.ms",
              "getter" : "GetSegmentMs",
              "setter" : "SetSegmentMs",
              "description" : "The value of config property 'segment.ms'.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "SegmentMs",
              "defaultValueWithParam" : " = data.segment.ms;",
              "baseType" : "string",
              "unescapedDescription" : "The value of config property 'segment.ms'.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value of config property 'segment.ms'."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "SegmentMs",
              "nameInSnakeCase" : "SEGMENT_MS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "segmentMs",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : { },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : false,
            "isRequestModel" : false,
            "isResponseModel" : true,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          }, {
            "interfaces" : [ ],
            "name" : "replica_assignment",
            "classname" : "ReplicaAssignment",
            "classVarName" : "replicaAssignment",
            "dataType" : "interface{}",
            "classFilename" : "ReplicaAssignment",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "id",
              "getter" : "GetID",
              "setter" : "SetID",
              "description" : "The ID of the partition.",
              "dataType" : "int64",
              "datatypeWithEnum" : "int64",
              "name" : "ID",
              "defaultValueWithParam" : " = data.id;",
              "baseType" : "int64",
              "unescapedDescription" : "The ID of the partition.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : true,
              "isInteger" : true,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The ID of the partition."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "ID",
              "nameInSnakeCase" : "I_D",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "id",
              "openapiType" : "integer",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "int64",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "brokers",
              "complexType" : "ReplicaAssignmentBrokers",
              "getter" : "GetBrokers",
              "setter" : "SetBrokers",
              "dataType" : "ReplicaAssignmentBrokers",
              "datatypeWithEnum" : "ReplicaAssignmentBrokers",
              "name" : "Brokers",
              "defaultValueWithParam" : " = data.brokers;",
              "baseType" : "ReplicaAssignmentBrokers",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : false,
              "isModel" : true,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : { },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Brokers",
              "nameInSnakeCase" : "BROKERS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "brokers",
              "openapiType" : "ReplicaAssignmentBrokers",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "ReplicaAssignmentBrokers",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ "ReplicaAssignmentBrokers" ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : { },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : false,
            "isRequestModel" : false,
            "isResponseModel" : true,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          }, {
            "interfaces" : [ ],
            "name" : "ReplicaAssignmentBrokers",
            "classname" : "ReplicaAssignmentBrokers",
            "classVarName" : "replicaAssignmentBrokers",
            "dataType" : "interface{}",
            "classFilename" : "ReplicaAssignmentBrokers",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "replicas",
              "getter" : "GetReplicas",
              "setter" : "SetReplicas",
              "dataType" : "[]int64",
              "datatypeWithEnum" : "[]int64",
              "name" : "Replicas",
              "defaultValueWithParam" : " = data.replicas;",
              "baseType" : "[]",
              "containerType" : "array",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : true,
              "isNotContainer" : false,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : true,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "items" : {
                "baseName" : "replicas",
                "getter" : "getReplicas",
                "setter" : "setReplicas",
                "description" : "The IDs of replicas of the partition.",
                "dataType" : "int64",
                "datatypeWithEnum" : "int64",
                "name" : "Replicas",
                "defaultValueWithParam" : " = data.Replicas;",
                "baseType" : "int64",
                "unescapedDescription" : "The IDs of replicas of the partition.",
                "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"description\" : \"The IDs of replicas of the partition.\",\n  \"x-original-description\" : \"The IDs of replicas of the partition.\"\n}",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : true,
                "isModel" : false,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : false,
                "isNumeric" : true,
                "isInteger" : true,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : {
                  "x-original-description" : "The IDs of replicas of the partition."
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Replicas",
                "nameInSnakeCase" : "REPLICAS",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "varName" : "replicas",
                "openapiType" : "integer",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "int64",
                "iexclusiveMaximum" : false
              },
              "vendorExtensions" : { },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Replicas",
              "nameInSnakeCase" : "REPLICAS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "replicas",
              "openapiType" : "array",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "[]int64",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ "[]" ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : { },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : false,
            "isRequestModel" : false,
            "isResponseModel" : true,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          } ],
          "hasFormParams" : false,
          "hasQueryParams" : false,
          "hasBodyParam" : false,
          "hasHeaderParams" : false,
          "hasPathParams" : false,
          "hasCookieParams" : false,
          "hasResponseHeaders" : true,
          "hasExamples" : false,
          "bodyAllowed" : false,
          "restfulShow" : false,
          "restfulIndex" : false,
          "restfulCreate" : false,
          "restfulUpdate" : false,
          "restfulDestroy" : false,
          "restful" : false
        }, {
          "responseHeaders" : [ {
            "baseName" : "X-Global-Transaction-Id",
            "getter" : "getXGlobalTransactionID",
            "setter" : "setXGlobalTransactionID",
            "description" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated.  In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "XGlobalTransactionID",
            "defaultValueWithParam" : " = data.X-Global-Transaction-Id;",
            "baseType" : "string",
            "unescapedDescription" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated.  In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "XGlobalTransactionID",
            "nameInSnakeCase" : "X_GLOBAL_TRANSACTION_I_D",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "xGlobalTransactionID",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Strict-Transport-Security",
            "getter" : "getStrictTransportSecurity",
            "setter" : "setStrictTransportSecurity",
            "description" : "Specifies a period of time during which the user agent should only access the server using secure HTTPS connections. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "StrictTransportSecurity",
            "defaultValue" : "max-age=31536000; includeSubDomains",
            "defaultValueWithParam" : " = data.Strict-Transport-Security;",
            "baseType" : "string",
            "unescapedDescription" : "Specifies a period of time during which the user agent should only access the server using secure HTTPS connections.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"max-age=31536000; includeSubDomains\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "StrictTransportSecurity",
            "nameInSnakeCase" : "STRICT_TRANSPORT_SECURITY",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "strictTransportSecurity",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Cache-Control",
            "getter" : "getCacheControl",
            "setter" : "setCacheControl",
            "description" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. And the cache should not store anything about the client request or server response. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "CacheControl",
            "defaultValue" : "no-cache, no-store",
            "defaultValueWithParam" : " = data.Cache-Control;",
            "baseType" : "string",
            "unescapedDescription" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. And the cache should not store anything about the client request or server response.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"no-cache, no-store\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "CacheControl",
            "nameInSnakeCase" : "CACHE_CONTROL",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "cacheControl",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Pragma",
            "getter" : "getPragma",
            "setter" : "setPragma",
            "description" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. Same as 'Cache-Control: no-cache'. It is used for backwards compatibility with HTTP/1.0. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "Pragma",
            "defaultValue" : "no-cache",
            "defaultValueWithParam" : " = data.Pragma;",
            "baseType" : "string",
            "unescapedDescription" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. Same as 'Cache-Control: no-cache'. It is used for backwards compatibility with HTTP/1.0.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"no-cache\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "Pragma",
            "nameInSnakeCase" : "PRAGMA",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "pragma",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          } ],
          "hasAuthMethods" : true,
          "hasConsumes" : false,
          "hasProduces" : true,
          "hasParams" : true,
          "hasOptionalParams" : false,
          "hasRequiredParams" : false,
          "returnTypeIsPrimitive" : true,
          "returnSimpleType" : true,
          "subresourceOperation" : false,
          "isMapContainer" : false,
          "isListContainer" : false,
          "isMultipart" : false,
          "hasMore" : true,
          "isResponseBinary" : false,
          "isResponseFile" : false,
          "hasReference" : false,
          "isRestfulIndex" : false,
          "isRestfulShow" : false,
          "isRestfulCreate" : false,
          "isRestfulUpdate" : false,
          "isRestfulDestroy" : false,
          "isRestful" : false,
          "isDeprecated" : false,
          "isCallbackRequest" : false,
          "path" : "/admin/topics/{topic_name}",
          "operationId" : "DeleteTopic",
          "httpMethod" : "DELETE",
          "summary" : "Delete a topic",
          "notes" : "Delete a topic.",
          "baseName" : "Default",
          "produces" : [ {
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : true,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : true,
            "isContainer" : false,
            "secondaryParam" : false,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "baseName" : "topic_name",
            "paramName" : "deleteTopicOptions.TopicName",
            "dataType" : "string",
            "description" : "The topic name for the topic to be listed.",
            "unescapedDescription" : "The topic name for the topic to be listed.",
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-original-description" : "The topic name for the topic to be listed.",
              "x-param-in-options" : true
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 5,
            "isOptionsParam" : false,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "string"
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "cookieParams" : [ ],
          "requiredParams" : [ ],
          "optionalParams" : [ ],
          "authMethods" : [ ],
          "tags" : [ {
            "name" : "default"
          } ],
          "responses" : [ ],
          "callbacks" : [ ],
          "imports" : [ "DeleteTopicOptions" ],
          "examples" : [ ],
          "requestBodyExamples" : [ ],
          "vendorExtensions" : {
            "acceptJSON" : true,
            "constructForm" : false,
            "x-original-description" : "Delete a topic.",
            "x-path-segments" : [ "admin/topics" ],
            "x-method-path" : "delete /admin/topics/{topic_name}",
            "x-validators" : [ ]
          },
          "nickname" : "DeleteTopic",
          "operationIdOriginal" : "DeleteTopic",
          "operationIdLowerCase" : "deletetopic",
          "operationIdCamelCase" : "DeleteTopic",
          "operationIdSnakeCase" : "delete_topic",
          "signature" : "(adminrest *AdminrestV1) DeleteTopic(deleteTopicOptions *DeleteTopicOptions) (response *core.DetailedResponse, err error)",
          "alternateSignature" : "(adminrest *AdminrestV1) DeleteTopicWithContext(ctx context.Context, deleteTopicOptions *DeleteTopicOptions) (response *core.DetailedResponse, err error)",
          "optionsParam" : {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : false,
            "isContainer" : false,
            "secondaryParam" : true,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "deleteTopicOptions",
            "paramName" : "deleteTopicOptions",
            "dataType" : "DeleteTopicOptions",
            "description" : "The DeleteTopic options.",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-options-model" : "DeleteTopicOptions"
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 10,
            "isOptionsParam" : true,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "DeleteTopicOptions"
          },
          "sendEmptyBody" : false,
          "hasMultiConsumes" : false,
          "requestModels" : [ {
            "interfaces" : [ ],
            "name" : "DeleteTopicOptions",
            "classname" : "DeleteTopicOptions",
            "description" : "The DeleteTopic options.",
            "classVarName" : "deleteTopicOptions",
            "dataType" : "interface{}",
            "classFilename" : "DeleteTopicOptions",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "topic_name",
              "getter" : "GetTopicName",
              "setter" : "SetTopicName",
              "description" : "The topic name for the topic to be listed.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "TopicName",
              "defaultValueWithParam" : " = data.topic_name;",
              "baseType" : "string",
              "unescapedDescription" : "The topic name for the topic to be listed.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : true,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-require-nonempty" : true,
                "x-original-description" : "The topic name for the topic to be listed.",
                "x-options-model" : "DeleteTopicOptions",
                "x-param-sort-score" : 5,
                "x-schema-prop-required" : true,
                "x-parameter-type" : "path",
                "x-param-in-body" : false,
                "x-param-in-options" : true
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "TopicName",
              "nameInSnakeCase" : "TOPIC_NAME",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "topicName",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ "topic_name" ],
            "allMandatory" : [ "topic_name" ],
            "imports" : [ ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : true,
            "hasOptional" : false,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-java-builder" : true,
              "x-is-options-model" : true,
              "hasParams" : true,
              "x-content-types" : [ ],
              "unitTestCtorParamsList" : "topicName",
              "ctorParamsList" : "topicName string"
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : true,
            "isRequestModel" : true,
            "isResponseModel" : false,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          } ],
          "hasFormParams" : false,
          "hasQueryParams" : false,
          "hasBodyParam" : false,
          "hasHeaderParams" : false,
          "hasPathParams" : false,
          "hasCookieParams" : false,
          "hasResponseHeaders" : true,
          "hasExamples" : false,
          "bodyAllowed" : false,
          "restfulShow" : false,
          "restfulIndex" : false,
          "restfulCreate" : false,
          "restfulUpdate" : false,
          "restfulDestroy" : false,
          "restful" : false
        }, {
          "responseHeaders" : [ {
            "baseName" : "X-Global-Transaction-Id",
            "getter" : "getXGlobalTransactionID",
            "setter" : "setXGlobalTransactionID",
            "description" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated.  In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "XGlobalTransactionID",
            "defaultValueWithParam" : " = data.X-Global-Transaction-Id;",
            "baseType" : "string",
            "unescapedDescription" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated.  In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "XGlobalTransactionID",
            "nameInSnakeCase" : "X_GLOBAL_TRANSACTION_I_D",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "xGlobalTransactionID",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Strict-Transport-Security",
            "getter" : "getStrictTransportSecurity",
            "setter" : "setStrictTransportSecurity",
            "description" : "Specifies a period of time during which the user agent should only access the server using secure HTTPS connections. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "StrictTransportSecurity",
            "defaultValue" : "max-age=31536000; includeSubDomains",
            "defaultValueWithParam" : " = data.Strict-Transport-Security;",
            "baseType" : "string",
            "unescapedDescription" : "Specifies a period of time during which the user agent should only access the server using secure HTTPS connections.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"max-age=31536000; includeSubDomains\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "StrictTransportSecurity",
            "nameInSnakeCase" : "STRICT_TRANSPORT_SECURITY",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "strictTransportSecurity",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Cache-Control",
            "getter" : "getCacheControl",
            "setter" : "setCacheControl",
            "description" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. And the cache should not store anything about the client request or server response. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "CacheControl",
            "defaultValue" : "no-cache, no-store",
            "defaultValueWithParam" : " = data.Cache-Control;",
            "baseType" : "string",
            "unescapedDescription" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. And the cache should not store anything about the client request or server response.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"no-cache, no-store\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "CacheControl",
            "nameInSnakeCase" : "CACHE_CONTROL",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "cacheControl",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          }, {
            "baseName" : "Pragma",
            "getter" : "getPragma",
            "setter" : "setPragma",
            "description" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. Same as 'Cache-Control: no-cache'. It is used for backwards compatibility with HTTP/1.0. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "Pragma",
            "defaultValue" : "no-cache",
            "defaultValueWithParam" : " = data.Pragma;",
            "baseType" : "string",
            "unescapedDescription" : "Forces caches to submit the request to the origin server for validation before releasing a cached copy. Same as 'Cache-Control: no-cache'. It is used for backwards compatibility with HTTP/1.0.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"default\" : \"no-cache\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "Pragma",
            "nameInSnakeCase" : "PRAGMA",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "pragma",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          } ],
          "hasAuthMethods" : true,
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "hasOptionalParams" : false,
          "hasRequiredParams" : false,
          "returnTypeIsPrimitive" : true,
          "returnSimpleType" : true,
          "subresourceOperation" : false,
          "isMapContainer" : false,
          "isListContainer" : false,
          "isMultipart" : false,
          "hasMore" : false,
          "isResponseBinary" : false,
          "isResponseFile" : false,
          "hasReference" : false,
          "isRestfulIndex" : false,
          "isRestfulShow" : false,
          "isRestfulCreate" : false,
          "isRestfulUpdate" : false,
          "isRestfulDestroy" : false,
          "isRestful" : false,
          "isDeprecated" : false,
          "isCallbackRequest" : false,
          "path" : "/admin/topics/{topic_name}",
          "operationId" : "UpdateTopic",
          "httpMethod" : "PATCH",
          "summary" : "Increase the number of partitions and/or update one or more topic configuration parameters",
          "notes" : "Increase the number of partitions and/or update one or more topic configuration parameters.",
          "baseName" : "Default",
          "consumes" : [ {
            "mediaType" : "application/json"
          } ],
          "produces" : [ {
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : true,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : true,
            "isContainer" : false,
            "secondaryParam" : false,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "baseName" : "topic_name",
            "paramName" : "updateTopicOptions.TopicName",
            "dataType" : "string",
            "description" : "The topic name for the topic to be listed.",
            "unescapedDescription" : "The topic name for the topic to be listed.",
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-original-description" : "The topic name for the topic to be listed.",
              "x-param-in-options" : true
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 5,
            "isOptionsParam" : false,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "string"
          }, {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : true,
            "hasMore" : false,
            "isContainer" : false,
            "secondaryParam" : true,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "topic_update",
            "paramName" : "topicUpdate",
            "dataType" : "TopicUpdateRequest",
            "description" : "The new partition number or the configurations to be updated for the topic.",
            "baseType" : "TopicUpdateRequest",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "constructBody" : true,
              "x-original-description" : "The new partition number or the configurations to be updated for the topic.",
              "bodyModelVars" : [ {
                "baseName" : "new_total_partition_count",
                "getter" : "GetNewTotalPartitionCount",
                "setter" : "SetNewTotalPartitionCount",
                "description" : "The new partition number to be increased.",
                "dataType" : "int64",
                "datatypeWithEnum" : "int64",
                "dataFormat" : "int32",
                "name" : "NewTotalPartitionCount",
                "defaultValueWithParam" : " = data.new_total_partition_count;",
                "baseType" : "int64",
                "unescapedDescription" : "The new partition number to be increased.",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : true,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : true,
                "isPrimitiveType" : true,
                "isModel" : false,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : false,
                "isNumeric" : true,
                "isInteger" : true,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : {
                  "x-original-description" : "The new partition number to be increased.",
                  "x-param-sort-score" : 102010,
                  "x-options-model" : "UpdateTopicOptions",
                  "x-body-option" : "new_total_partition_count",
                  "x-parameter-type" : "body",
                  "x-param-in-body" : false
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "NewTotalPartitionCount",
                "nameInSnakeCase" : "NEW_TOTAL_PARTITION_COUNT",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "paramName" : "updateTopicOptions.NewTotalPartitionCount",
                "varName" : "newTotalPartitionCount",
                "openapiType" : "integer",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "int64",
                "iexclusiveMaximum" : false
              }, {
                "baseName" : "configs",
                "complexType" : "ConfigUpdate",
                "getter" : "GetConfigs",
                "setter" : "SetConfigs",
                "description" : "The config properties to be updated for the topic. Valid config keys are 'cleanup.policy', 'retention.ms', 'retention.bytes', 'segment.bytes', 'segment.ms', 'segment.index.bytes'.",
                "dataType" : "[]ConfigUpdate",
                "datatypeWithEnum" : "[]ConfigUpdate",
                "name" : "Configs",
                "defaultValueWithParam" : " = data.configs;",
                "baseType" : "[]",
                "containerType" : "array",
                "unescapedDescription" : "The config properties to be updated for the topic. Valid config keys are 'cleanup.policy', 'retention.ms', 'retention.bytes', 'segment.bytes', 'segment.ms', 'segment.index.bytes'.\n",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : false,
                "isModel" : false,
                "isContainer" : true,
                "isNotContainer" : false,
                "isString" : false,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : true,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "items" : {
                  "baseName" : "configs",
                  "complexType" : "ConfigUpdate",
                  "getter" : "getConfigs",
                  "setter" : "setConfigs",
                  "dataType" : "ConfigUpdate",
                  "datatypeWithEnum" : "ConfigUpdate",
                  "name" : "Configs",
                  "defaultValueWithParam" : " = data.Configs;",
                  "baseType" : "ConfigUpdate",
                  "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/config_update\"\n}",
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "hasMore" : false,
                  "required" : false,
                  "secondaryParam" : false,
                  "hasMoreNonReadOnly" : false,
                  "isPrimitiveType" : false,
                  "isModel" : true,
                  "isContainer" : false,
                  "isNotContainer" : true,
                  "isString" : false,
                  "isNumeric" : false,
                  "isInteger" : false,
                  "isLong" : false,
                  "isNumber" : false,
                  "isFloat" : false,
                  "isDouble" : false,
                  "isByteArray" : false,
                  "isBinary" : false,
                  "isFile" : false,
                  "isBoolean" : false,
                  "isDate" : false,
                  "isDateTime" : false,
                  "isUuid" : false,
                  "isEmail" : false,
                  "isListContainer" : false,
                  "isMapContainer" : false,
                  "isEnum" : false,
                  "isReadOnly" : false,
                  "isWriteOnly" : false,
                  "isNullable" : false,
                  "vendorExtensions" : { },
                  "hasValidation" : false,
                  "isInherited" : false,
                  "nameInCamelCase" : "Configs",
                  "nameInSnakeCase" : "CONFIGS",
                  "isXmlAttribute" : false,
                  "isXmlWrapped" : false,
                  "varName" : "configs",
                  "openapiType" : "config_update",
                  "isDataSourceFilter" : false,
                  "modelIsAbstract" : false,
                  "modelIsDynamic" : false,
                  "modelHasDiscriminator" : false,
                  "isAnyObject" : false,
                  "isAnyType" : false,
                  "isBigDecimal" : false,
                  "modelList" : false,
                  "byteArrayList" : false,
                  "stringMap" : false,
                  "datatype" : "ConfigUpdate",
                  "iexclusiveMaximum" : false
                },
                "vendorExtensions" : {
                  "x-original-description" : "The config properties to be updated for the topic. Valid config keys are 'cleanup.policy', 'retention.ms', 'retention.bytes', 'segment.bytes', 'segment.ms', 'segment.index.bytes'.\n",
                  "x-param-sort-score" : 102015,
                  "x-options-model" : "UpdateTopicOptions",
                  "x-body-option" : "configs",
                  "x-parameter-type" : "body",
                  "x-param-in-body" : false
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Configs",
                "nameInSnakeCase" : "CONFIGS",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "paramName" : "updateTopicOptions.Configs",
                "varName" : "configs",
                "openapiType" : "array",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : true,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "[]ConfigUpdate",
                "iexclusiveMaximum" : false
              } ],
              "x-param-in-options" : true
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 1015,
            "isOptionsParam" : false,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "cookieParams" : [ ],
          "requiredParams" : [ ],
          "optionalParams" : [ ],
          "authMethods" : [ ],
          "tags" : [ {
            "name" : "default"
          } ],
          "responses" : [ ],
          "callbacks" : [ ],
          "imports" : [ "UpdateTopicOptions" ],
          "examples" : [ ],
          "requestBodyExamples" : [ ],
          "vendorExtensions" : {
            "x-body-param-info" : {
              "multipleConsumes" : false,
              "bodyParamRequired" : true,
              "contentType" : "\"application/json\"",
              "jsonContent" : "topicUpdate",
              "jsonPatchContent" : "nil",
              "content" : "nil",
              "jsonMergePatchContent" : false
            },
            "constructForm" : false,
            "x-original-description" : "Increase the number of partitions and/or update one or more topic configuration parameters.\n",
            "x-codegen-request-body-name" : "topic_update",
            "x-path-segments" : [ "admin/topics" ],
            "x-validators" : [ ],
            "acceptJSON" : true,
            "x-method-path" : "patch /admin/topics/{topic_name}"
          },
          "nickname" : "UpdateTopic",
          "operationIdOriginal" : "UpdateTopic",
          "operationIdLowerCase" : "updatetopic",
          "operationIdCamelCase" : "UpdateTopic",
          "operationIdSnakeCase" : "update_topic",
          "signature" : "(adminrest *AdminrestV1) UpdateTopic(updateTopicOptions *UpdateTopicOptions) (response *core.DetailedResponse, err error)",
          "alternateSignature" : "(adminrest *AdminrestV1) UpdateTopicWithContext(ctx context.Context, updateTopicOptions *UpdateTopicOptions) (response *core.DetailedResponse, err error)",
          "optionsParam" : {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : true,
            "isContainer" : false,
            "secondaryParam" : true,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "updateTopicOptions",
            "paramName" : "updateTopicOptions",
            "dataType" : "UpdateTopicOptions",
            "description" : "The UpdateTopic options.",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-options-model" : "UpdateTopicOptions"
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 10,
            "isOptionsParam" : true,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "UpdateTopicOptions"
          },
          "sendEmptyBody" : false,
          "hasMultiConsumes" : false,
          "requestModels" : [ {
            "interfaces" : [ ],
            "name" : "UpdateTopicOptions",
            "classname" : "UpdateTopicOptions",
            "description" : "The UpdateTopic options.",
            "classVarName" : "updateTopicOptions",
            "dataType" : "interface{}",
            "classFilename" : "UpdateTopicOptions",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "topic_name",
              "getter" : "GetTopicName",
              "setter" : "SetTopicName",
              "description" : "The topic name for the topic to be listed.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "TopicName",
              "defaultValueWithParam" : " = data.topic_name;",
              "baseType" : "string",
              "unescapedDescription" : "The topic name for the topic to be listed.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : true,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-require-nonempty" : true,
                "x-original-description" : "The topic name for the topic to be listed.",
                "x-options-model" : "UpdateTopicOptions",
                "x-param-sort-score" : 5,
                "x-schema-prop-required" : true,
                "x-parameter-type" : "path",
                "x-param-in-body" : false,
                "x-param-in-options" : true
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "TopicName",
              "nameInSnakeCase" : "TOPIC_NAME",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "topicName",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "new_total_partition_count",
              "getter" : "GetNewTotalPartitionCount",
              "setter" : "SetNewTotalPartitionCount",
              "description" : "The new partition number to be increased.",
              "dataType" : "int64",
              "datatypeWithEnum" : "int64",
              "dataFormat" : "int32",
              "name" : "NewTotalPartitionCount",
              "defaultValueWithParam" : " = data.new_total_partition_count;",
              "baseType" : "int64",
              "unescapedDescription" : "The new partition number to be increased.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : true,
              "isInteger" : true,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The new partition number to be increased.",
                "x-param-sort-score" : 102010,
                "x-options-model" : "UpdateTopicOptions",
                "x-body-option" : "new_total_partition_count",
                "x-parameter-type" : "body",
                "x-param-in-body" : false
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "NewTotalPartitionCount",
              "nameInSnakeCase" : "NEW_TOTAL_PARTITION_COUNT",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "paramName" : "updateTopicOptions.NewTotalPartitionCount",
              "varName" : "newTotalPartitionCount",
              "openapiType" : "integer",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "int64",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "configs",
              "complexType" : "ConfigUpdate",
              "getter" : "GetConfigs",
              "setter" : "SetConfigs",
              "description" : "The config properties to be updated for the topic. Valid config keys are 'cleanup.policy', 'retention.ms', 'retention.bytes', 'segment.bytes', 'segment.ms', 'segment.index.bytes'.",
              "dataType" : "[]ConfigUpdate",
              "datatypeWithEnum" : "[]ConfigUpdate",
              "name" : "Configs",
              "defaultValueWithParam" : " = data.configs;",
              "baseType" : "[]",
              "containerType" : "array",
              "unescapedDescription" : "The config properties to be updated for the topic. Valid config keys are 'cleanup.policy', 'retention.ms', 'retention.bytes', 'segment.bytes', 'segment.ms', 'segment.index.bytes'.\n",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : false,
              "isModel" : false,
              "isContainer" : true,
              "isNotContainer" : false,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : true,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "items" : {
                "baseName" : "configs",
                "complexType" : "ConfigUpdate",
                "getter" : "getConfigs",
                "setter" : "setConfigs",
                "dataType" : "ConfigUpdate",
                "datatypeWithEnum" : "ConfigUpdate",
                "name" : "Configs",
                "defaultValueWithParam" : " = data.Configs;",
                "baseType" : "ConfigUpdate",
                "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/config_update\"\n}",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : false,
                "isModel" : true,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : false,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : { },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Configs",
                "nameInSnakeCase" : "CONFIGS",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "varName" : "configs",
                "openapiType" : "config_update",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "ConfigUpdate",
                "iexclusiveMaximum" : false
              },
              "vendorExtensions" : {
                "x-original-description" : "The config properties to be updated for the topic. Valid config keys are 'cleanup.policy', 'retention.ms', 'retention.bytes', 'segment.bytes', 'segment.ms', 'segment.index.bytes'.\n",
                "x-param-sort-score" : 102015,
                "x-options-model" : "UpdateTopicOptions",
                "x-body-option" : "configs",
                "x-parameter-type" : "body",
                "x-param-in-body" : false
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Configs",
              "nameInSnakeCase" : "CONFIGS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "paramName" : "updateTopicOptions.Configs",
              "varName" : "configs",
              "openapiType" : "array",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : true,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "[]ConfigUpdate",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ "topic_name" ],
            "allMandatory" : [ "topic_name" ],
            "imports" : [ "ConfigUpdate", "[]" ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : true,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-java-builder" : true,
              "x-is-options-model" : true,
              "hasParams" : true,
              "x-content-types" : [ "application/json" ],
              "unitTestCtorParamsList" : "topicName",
              "ctorParamsList" : "topicName string"
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : true,
            "isRequestModel" : true,
            "isResponseModel" : false,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          }, {
            "interfaces" : [ ],
            "name" : "config_update",
            "classname" : "ConfigUpdate",
            "classVarName" : "configUpdate",
            "dataType" : "interface{}",
            "classFilename" : "ConfigUpdate",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "name",
              "getter" : "GetName",
              "setter" : "SetName",
              "description" : "The name of the config property.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "Name",
              "defaultValueWithParam" : " = data.name;",
              "baseType" : "string",
              "unescapedDescription" : "The name of the config property.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The name of the config property."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Name",
              "nameInSnakeCase" : "NAME",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "name",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "value",
              "getter" : "GetValue",
              "setter" : "SetValue",
              "description" : "The value for a config property.",
              "dataType" : "string",
              "datatypeWithEnum" : "string",
              "name" : "Value",
              "defaultValueWithParam" : " = data.value;",
              "baseType" : "string",
              "unescapedDescription" : "The value for a config property.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : true,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : true,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : true,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "The value for a config property."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Value",
              "nameInSnakeCase" : "VALUE",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "value",
              "openapiType" : "string",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "string",
              "iexclusiveMaximum" : false
            }, {
              "baseName" : "reset_to_default",
              "getter" : "GetResetToDefault",
              "setter" : "SetResetToDefault",
              "description" : "When true, the value of the config property is reset to its default value.",
              "dataType" : "bool",
              "datatypeWithEnum" : "bool",
              "name" : "ResetToDefault",
              "defaultValueWithParam" : " = data.reset_to_default;",
              "baseType" : "bool",
              "unescapedDescription" : "When true, the value of the config property is reset to its default value.",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : false,
              "isNotContainer" : true,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : true,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : false,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "vendorExtensions" : {
                "x-original-description" : "When true, the value of the config property is reset to its default value."
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "ResetToDefault",
              "nameInSnakeCase" : "RESET_TO_DEFAULT",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "resetToDefault",
              "openapiType" : "boolean",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "bool",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-java-builder" : true
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : false,
            "isRequestModel" : true,
            "isResponseModel" : false,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          } ],
          "hasFormParams" : false,
          "hasQueryParams" : false,
          "hasBodyParam" : false,
          "hasHeaderParams" : false,
          "hasPathParams" : false,
          "hasCookieParams" : false,
          "hasResponseHeaders" : true,
          "hasExamples" : false,
          "bodyAllowed" : true,
          "restfulShow" : false,
          "restfulIndex" : false,
          "restfulCreate" : false,
          "restfulUpdate" : false,
          "restfulDestroy" : false,
          "restful" : false
        }, {
          "responseHeaders" : [ {
            "baseName" : "X-Global-Transaction-Id",
            "getter" : "getXGlobalTransactionID",
            "setter" : "setXGlobalTransactionID",
            "description" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated. In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "XGlobalTransactionID",
            "defaultValueWithParam" : " = data.X-Global-Transaction-Id;",
            "baseType" : "string",
            "unescapedDescription" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated. In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "XGlobalTransactionID",
            "nameInSnakeCase" : "X_GLOBAL_TRANSACTION_I_D",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "xGlobalTransactionID",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          } ],
          "hasAuthMethods" : true,
          "hasConsumes" : false,
          "hasProduces" : true,
          "hasParams" : false,
          "hasOptionalParams" : false,
          "hasRequiredParams" : false,
          "returnTypeIsPrimitive" : false,
          "returnSimpleType" : true,
          "subresourceOperation" : false,
          "isMapContainer" : false,
          "isListContainer" : false,
          "isMultipart" : false,
          "hasMore" : true,
          "isResponseBinary" : false,
          "isResponseFile" : false,
          "hasReference" : false,
          "isRestfulIndex" : false,
          "isRestfulShow" : false,
          "isRestfulCreate" : false,
          "isRestfulUpdate" : false,
          "isRestfulDestroy" : false,
          "isRestful" : false,
          "isDeprecated" : false,
          "isCallbackRequest" : false,
          "path" : "/admin/mirroring/topic-selection",
          "operationId" : "GetMirroringTopicSelection",
          "returnType" : "MirroringTopicSelection",
          "httpMethod" : "GET",
          "returnBaseType" : "MirroringTopicSelection",
          "summary" : "Get current topic selection for mirroring",
          "notes" : "Get current topic selection for mirroring.",
          "baseName" : "Default",
          "produces" : [ {
            "mediaType" : "application/json"
          } ],
          "allParams" : [ ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "cookieParams" : [ ],
          "requiredParams" : [ ],
          "optionalParams" : [ ],
          "authMethods" : [ ],
          "tags" : [ {
            "name" : "default"
          } ],
          "responses" : [ ],
          "callbacks" : [ ],
          "imports" : [ "GetMirroringTopicSelectionOptions", "MirroringTopicSelection" ],
          "examples" : [ ],
          "requestBodyExamples" : [ ],
          "vendorExtensions" : {
            "acceptJSON" : true,
            "constructForm" : false,
            "x-original-description" : "Get current topic selection for mirroring.",
            "x-path-segments" : [ "admin/mirroring/topic-selection" ],
            "x-method-path" : "get /admin/mirroring/topic-selection",
            "x-validators" : [ ]
          },
          "nickname" : "GetMirroringTopicSelection",
          "operationIdOriginal" : "GetMirroringTopicSelection",
          "operationIdLowerCase" : "getmirroringtopicselection",
          "operationIdCamelCase" : "GetMirroringTopicSelection",
          "operationIdSnakeCase" : "get_mirroring_topic_selection",
          "signature" : "(adminrest *AdminrestV1) GetMirroringTopicSelection(getMirroringTopicSelectionOptions *GetMirroringTopicSelectionOptions) (result *MirroringTopicSelection, response *core.DetailedResponse, err error)",
          "alternateSignature" : "(adminrest *AdminrestV1) GetMirroringTopicSelectionWithContext(ctx context.Context, getMirroringTopicSelectionOptions *GetMirroringTopicSelectionOptions) (result *MirroringTopicSelection, response *core.DetailedResponse, err error)",
          "optionsParam" : {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : false,
            "isContainer" : false,
            "secondaryParam" : false,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "getMirroringTopicSelectionOptions",
            "paramName" : "getMirroringTopicSelectionOptions",
            "dataType" : "GetMirroringTopicSelectionOptions",
            "description" : "The GetMirroringTopicSelection options.",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-options-model" : "GetMirroringTopicSelectionOptions"
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : false,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 103005,
            "isOptionsParam" : true,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "GetMirroringTopicSelectionOptions"
          },
          "sendEmptyBody" : false,
          "hasMultiConsumes" : false,
          "operationResponse" : {
            "baseName" : "MirroringTopicSelection",
            "complexType" : "MirroringTopicSelection",
            "getter" : "getMirroringTopicSelection",
            "setter" : "setMirroringTopicSelection",
            "dataType" : "MirroringTopicSelection",
            "datatypeWithEnum" : "MirroringTopicSelection",
            "name" : "MirroringTopicSelection",
            "defaultValueWithParam" : " = data.MirroringTopicSelection;",
            "baseType" : "MirroringTopicSelection",
            "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/mirroring_topic_selection\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "MirroringTopicSelection",
            "nameInSnakeCase" : "MIRRORING_TOPIC_SELECTION",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "mirroringTopicSelection",
            "openapiType" : "mirroring_topic_selection",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "propInfo" : {
              "modelFieldName" : "MirroringTopicSelection",
              "modelFieldDatatype" : "*MirroringTopicSelection",
              "unmarshaller" : "UnmarshalMirroringTopicSelection",
              "modelDatatypePrefix" : "*",
              "setterDatatypePrefix" : "*",
              "setterParamName" : "mirroringTopicSelection",
              "setterAssignmentParamName" : "mirroringTopicSelection",
              "goFieldAnnotation" : "json:\"MirroringTopicSelection,omitempty\""
            },
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "MirroringTopicSelection",
            "iexclusiveMaximum" : false
          },
          "requestModels" : [ ],
          "responseModels" : [ {
            "interfaces" : [ ],
            "name" : "mirroring_topic_selection",
            "classname" : "MirroringTopicSelection",
            "description" : "Mirroring topic selection payload.",
            "classVarName" : "mirroringTopicSelection",
            "dataType" : "interface{}",
            "classFilename" : "MirroringTopicSelection",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "includes",
              "getter" : "GetIncludes",
              "setter" : "SetIncludes",
              "dataType" : "[]string",
              "datatypeWithEnum" : "[]string",
              "name" : "Includes",
              "defaultValueWithParam" : " = data.includes;",
              "baseType" : "[]",
              "containerType" : "array",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : true,
              "isNotContainer" : false,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : true,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "items" : {
                "baseName" : "includes",
                "getter" : "getIncludes",
                "setter" : "setIncludes",
                "description" : "Mirroring topic selection pattern.",
                "dataType" : "string",
                "datatypeWithEnum" : "string",
                "name" : "Includes",
                "defaultValueWithParam" : " = data.Includes;",
                "baseType" : "string",
                "unescapedDescription" : "Mirroring topic selection pattern.",
                "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Mirroring topic selection pattern.\",\n  \"x-original-description\" : \"Mirroring topic selection pattern.\"\n}",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : true,
                "isModel" : false,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : true,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : {
                  "x-original-description" : "Mirroring topic selection pattern."
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Includes",
                "nameInSnakeCase" : "INCLUDES",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "varName" : "includes",
                "openapiType" : "string",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "string",
                "iexclusiveMaximum" : false
              },
              "vendorExtensions" : { },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Includes",
              "nameInSnakeCase" : "INCLUDES",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "includes",
              "openapiType" : "array",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "[]string",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ "[]" ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-java-builder" : true,
              "x-original-description" : "Mirroring topic selection payload."
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : false,
            "isRequestModel" : true,
            "isResponseModel" : true,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          } ],
          "hasFormParams" : false,
          "hasQueryParams" : false,
          "hasBodyParam" : false,
          "hasHeaderParams" : false,
          "hasPathParams" : false,
          "hasCookieParams" : false,
          "hasResponseHeaders" : true,
          "hasExamples" : false,
          "bodyAllowed" : false,
          "restfulShow" : false,
          "restfulIndex" : false,
          "restfulCreate" : false,
          "restfulUpdate" : false,
          "restfulDestroy" : false,
          "restful" : false
        }, {
          "responseHeaders" : [ {
            "baseName" : "X-Global-Transaction-Id",
            "getter" : "getXGlobalTransactionID",
            "setter" : "setXGlobalTransactionID",
            "description" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated. In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "XGlobalTransactionID",
            "defaultValueWithParam" : " = data.X-Global-Transaction-Id;",
            "baseType" : "string",
            "unescapedDescription" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated. In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "XGlobalTransactionID",
            "nameInSnakeCase" : "X_GLOBAL_TRANSACTION_I_D",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "xGlobalTransactionID",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          } ],
          "hasAuthMethods" : true,
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "hasOptionalParams" : false,
          "hasRequiredParams" : false,
          "returnTypeIsPrimitive" : false,
          "returnSimpleType" : true,
          "subresourceOperation" : false,
          "isMapContainer" : false,
          "isListContainer" : false,
          "isMultipart" : false,
          "hasMore" : true,
          "isResponseBinary" : false,
          "isResponseFile" : false,
          "hasReference" : false,
          "isRestfulIndex" : false,
          "isRestfulShow" : false,
          "isRestfulCreate" : false,
          "isRestfulUpdate" : false,
          "isRestfulDestroy" : false,
          "isRestful" : false,
          "isDeprecated" : false,
          "isCallbackRequest" : false,
          "path" : "/admin/mirroring/topic-selection",
          "operationId" : "ReplaceMirroringTopicSelection",
          "returnType" : "MirroringTopicSelection",
          "httpMethod" : "POST",
          "returnBaseType" : "MirroringTopicSelection",
          "summary" : "Replace topic selection for mirroring",
          "notes" : "Replace topic selection for mirroring. This operation replaces the complete set of mirroring topic selections.",
          "baseName" : "Default",
          "consumes" : [ {
            "mediaType" : "application/json"
          } ],
          "produces" : [ {
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : true,
            "hasMore" : false,
            "isContainer" : false,
            "secondaryParam" : true,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "mirroring_topic_selection_replacement",
            "paramName" : "mirroringTopicSelectionReplacement",
            "dataType" : "MirroringTopicSelection",
            "description" : "Topic selection patterns for mirroring.",
            "baseType" : "MirroringTopicSelection",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "constructBody" : true,
              "x-original-description" : "Topic selection patterns for mirroring.",
              "bodyModelVars" : [ {
                "baseName" : "includes",
                "getter" : "GetIncludes",
                "setter" : "SetIncludes",
                "dataType" : "[]string",
                "datatypeWithEnum" : "[]string",
                "name" : "Includes",
                "defaultValueWithParam" : " = data.includes;",
                "baseType" : "[]",
                "containerType" : "array",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : true,
                "isModel" : false,
                "isContainer" : true,
                "isNotContainer" : false,
                "isString" : false,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : true,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "items" : {
                  "baseName" : "includes",
                  "getter" : "getIncludes",
                  "setter" : "setIncludes",
                  "description" : "Mirroring topic selection pattern.",
                  "dataType" : "string",
                  "datatypeWithEnum" : "string",
                  "name" : "Includes",
                  "defaultValueWithParam" : " = data.Includes;",
                  "baseType" : "string",
                  "unescapedDescription" : "Mirroring topic selection pattern.",
                  "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Mirroring topic selection pattern.\",\n  \"x-original-description\" : \"Mirroring topic selection pattern.\"\n}",
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "hasMore" : false,
                  "required" : false,
                  "secondaryParam" : false,
                  "hasMoreNonReadOnly" : false,
                  "isPrimitiveType" : true,
                  "isModel" : false,
                  "isContainer" : false,
                  "isNotContainer" : true,
                  "isString" : true,
                  "isNumeric" : false,
                  "isInteger" : false,
                  "isLong" : false,
                  "isNumber" : false,
                  "isFloat" : false,
                  "isDouble" : false,
                  "isByteArray" : false,
                  "isBinary" : false,
                  "isFile" : false,
                  "isBoolean" : false,
                  "isDate" : false,
                  "isDateTime" : false,
                  "isUuid" : false,
                  "isEmail" : false,
                  "isListContainer" : false,
                  "isMapContainer" : false,
                  "isEnum" : false,
                  "isReadOnly" : false,
                  "isWriteOnly" : false,
                  "isNullable" : false,
                  "vendorExtensions" : {
                    "x-original-description" : "Mirroring topic selection pattern."
                  },
                  "hasValidation" : false,
                  "isInherited" : false,
                  "nameInCamelCase" : "Includes",
                  "nameInSnakeCase" : "INCLUDES",
                  "isXmlAttribute" : false,
                  "isXmlWrapped" : false,
                  "varName" : "includes",
                  "openapiType" : "string",
                  "isDataSourceFilter" : false,
                  "modelIsAbstract" : false,
                  "modelIsDynamic" : false,
                  "modelHasDiscriminator" : false,
                  "isAnyObject" : false,
                  "isAnyType" : false,
                  "isBigDecimal" : false,
                  "modelList" : false,
                  "byteArrayList" : false,
                  "stringMap" : false,
                  "datatype" : "string",
                  "iexclusiveMaximum" : false
                },
                "vendorExtensions" : {
                  "x-param-sort-score" : 102005,
                  "x-options-model" : "ReplaceMirroringTopicSelectionOptions",
                  "x-body-option" : "includes",
                  "x-parameter-type" : "body",
                  "x-param-in-body" : false
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Includes",
                "nameInSnakeCase" : "INCLUDES",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "paramName" : "replaceMirroringTopicSelectionOptions.Includes",
                "varName" : "includes",
                "openapiType" : "array",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "[]string",
                "iexclusiveMaximum" : false
              } ],
              "x-param-in-options" : true
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 1010,
            "isOptionsParam" : false,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "cookieParams" : [ ],
          "requiredParams" : [ ],
          "optionalParams" : [ ],
          "authMethods" : [ ],
          "tags" : [ {
            "name" : "default"
          } ],
          "responses" : [ ],
          "callbacks" : [ ],
          "imports" : [ "MirroringTopicSelection", "ReplaceMirroringTopicSelectionOptions" ],
          "examples" : [ ],
          "requestBodyExamples" : [ ],
          "vendorExtensions" : {
            "x-body-param-info" : {
              "multipleConsumes" : false,
              "bodyParamRequired" : true,
              "contentType" : "\"application/json\"",
              "jsonContent" : "mirroringTopicSelectionReplacement",
              "jsonPatchContent" : "nil",
              "content" : "nil",
              "jsonMergePatchContent" : false
            },
            "constructForm" : false,
            "x-original-description" : "Replace topic selection for mirroring. This operation replaces the complete set of mirroring topic selections.",
            "x-codegen-request-body-name" : "mirroring_topic_selection_replacement",
            "x-path-segments" : [ "admin/mirroring/topic-selection" ],
            "x-validators" : [ ],
            "acceptJSON" : true,
            "x-method-path" : "post /admin/mirroring/topic-selection"
          },
          "nickname" : "ReplaceMirroringTopicSelection",
          "operationIdOriginal" : "ReplaceMirroringTopicSelection",
          "operationIdLowerCase" : "replacemirroringtopicselection",
          "operationIdCamelCase" : "ReplaceMirroringTopicSelection",
          "operationIdSnakeCase" : "replace_mirroring_topic_selection",
          "signature" : "(adminrest *AdminrestV1) ReplaceMirroringTopicSelection(replaceMirroringTopicSelectionOptions *ReplaceMirroringTopicSelectionOptions) (result *MirroringTopicSelection, response *core.DetailedResponse, err error)",
          "alternateSignature" : "(adminrest *AdminrestV1) ReplaceMirroringTopicSelectionWithContext(ctx context.Context, replaceMirroringTopicSelectionOptions *ReplaceMirroringTopicSelectionOptions) (result *MirroringTopicSelection, response *core.DetailedResponse, err error)",
          "optionsParam" : {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : true,
            "isContainer" : false,
            "secondaryParam" : false,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "replaceMirroringTopicSelectionOptions",
            "paramName" : "replaceMirroringTopicSelectionOptions",
            "dataType" : "ReplaceMirroringTopicSelectionOptions",
            "description" : "The ReplaceMirroringTopicSelection options.",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-options-model" : "ReplaceMirroringTopicSelectionOptions"
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : true,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 5,
            "isOptionsParam" : true,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "ReplaceMirroringTopicSelectionOptions"
          },
          "sendEmptyBody" : false,
          "hasMultiConsumes" : false,
          "operationResponse" : {
            "baseName" : "MirroringTopicSelection",
            "complexType" : "MirroringTopicSelection",
            "getter" : "getMirroringTopicSelection",
            "setter" : "setMirroringTopicSelection",
            "dataType" : "MirroringTopicSelection",
            "datatypeWithEnum" : "MirroringTopicSelection",
            "name" : "MirroringTopicSelection",
            "defaultValueWithParam" : " = data.MirroringTopicSelection;",
            "baseType" : "MirroringTopicSelection",
            "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/mirroring_topic_selection\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "MirroringTopicSelection",
            "nameInSnakeCase" : "MIRRORING_TOPIC_SELECTION",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "mirroringTopicSelection",
            "openapiType" : "mirroring_topic_selection",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "propInfo" : {
              "modelFieldName" : "MirroringTopicSelection",
              "modelFieldDatatype" : "*MirroringTopicSelection",
              "unmarshaller" : "UnmarshalMirroringTopicSelection",
              "modelDatatypePrefix" : "*",
              "setterDatatypePrefix" : "*",
              "setterParamName" : "mirroringTopicSelection",
              "setterAssignmentParamName" : "mirroringTopicSelection",
              "goFieldAnnotation" : "json:\"MirroringTopicSelection,omitempty\""
            },
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "MirroringTopicSelection",
            "iexclusiveMaximum" : false
          },
          "requestModels" : [ {
            "interfaces" : [ ],
            "name" : "ReplaceMirroringTopicSelectionOptions",
            "classname" : "ReplaceMirroringTopicSelectionOptions",
            "description" : "The ReplaceMirroringTopicSelection options.",
            "classVarName" : "replaceMirroringTopicSelectionOptions",
            "dataType" : "interface{}",
            "classFilename" : "ReplaceMirroringTopicSelectionOptions",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "includes",
              "getter" : "GetIncludes",
              "setter" : "SetIncludes",
              "dataType" : "[]string",
              "datatypeWithEnum" : "[]string",
              "name" : "Includes",
              "defaultValueWithParam" : " = data.includes;",
              "baseType" : "[]",
              "containerType" : "array",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : true,
              "isNotContainer" : false,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : true,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "items" : {
                "baseName" : "includes",
                "getter" : "getIncludes",
                "setter" : "setIncludes",
                "description" : "Mirroring topic selection pattern.",
                "dataType" : "string",
                "datatypeWithEnum" : "string",
                "name" : "Includes",
                "defaultValueWithParam" : " = data.Includes;",
                "baseType" : "string",
                "unescapedDescription" : "Mirroring topic selection pattern.",
                "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Mirroring topic selection pattern.\",\n  \"x-original-description\" : \"Mirroring topic selection pattern.\"\n}",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : true,
                "isModel" : false,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : true,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : {
                  "x-original-description" : "Mirroring topic selection pattern."
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Includes",
                "nameInSnakeCase" : "INCLUDES",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "varName" : "includes",
                "openapiType" : "string",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "string",
                "iexclusiveMaximum" : false
              },
              "vendorExtensions" : {
                "x-param-sort-score" : 102005,
                "x-options-model" : "ReplaceMirroringTopicSelectionOptions",
                "x-body-option" : "includes",
                "x-parameter-type" : "body",
                "x-param-in-body" : false
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Includes",
              "nameInSnakeCase" : "INCLUDES",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "paramName" : "replaceMirroringTopicSelectionOptions.Includes",
              "varName" : "includes",
              "openapiType" : "array",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "[]string",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ "[]" ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-java-builder" : true,
              "x-is-options-model" : true,
              "x-body-setter" : "MirroringTopicSelection",
              "x-content-types" : [ "application/json" ]
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : true,
            "isRequestModel" : true,
            "isResponseModel" : false,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          } ],
          "responseModels" : [ {
            "interfaces" : [ ],
            "name" : "mirroring_topic_selection",
            "classname" : "MirroringTopicSelection",
            "description" : "Mirroring topic selection payload.",
            "classVarName" : "mirroringTopicSelection",
            "dataType" : "interface{}",
            "classFilename" : "MirroringTopicSelection",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "includes",
              "getter" : "GetIncludes",
              "setter" : "SetIncludes",
              "dataType" : "[]string",
              "datatypeWithEnum" : "[]string",
              "name" : "Includes",
              "defaultValueWithParam" : " = data.includes;",
              "baseType" : "[]",
              "containerType" : "array",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : true,
              "isNotContainer" : false,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : true,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "items" : {
                "baseName" : "includes",
                "getter" : "getIncludes",
                "setter" : "setIncludes",
                "description" : "Mirroring topic selection pattern.",
                "dataType" : "string",
                "datatypeWithEnum" : "string",
                "name" : "Includes",
                "defaultValueWithParam" : " = data.Includes;",
                "baseType" : "string",
                "unescapedDescription" : "Mirroring topic selection pattern.",
                "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Mirroring topic selection pattern.\",\n  \"x-original-description\" : \"Mirroring topic selection pattern.\"\n}",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : true,
                "isModel" : false,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : true,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : {
                  "x-original-description" : "Mirroring topic selection pattern."
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "Includes",
                "nameInSnakeCase" : "INCLUDES",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "varName" : "includes",
                "openapiType" : "string",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "string",
                "iexclusiveMaximum" : false
              },
              "vendorExtensions" : { },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "Includes",
              "nameInSnakeCase" : "INCLUDES",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "includes",
              "openapiType" : "array",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "[]string",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ "[]" ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-java-builder" : true,
              "x-original-description" : "Mirroring topic selection payload."
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : false,
            "isRequestModel" : true,
            "isResponseModel" : true,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          } ],
          "hasFormParams" : false,
          "hasQueryParams" : false,
          "hasBodyParam" : false,
          "hasHeaderParams" : false,
          "hasPathParams" : false,
          "hasCookieParams" : false,
          "hasResponseHeaders" : true,
          "hasExamples" : false,
          "bodyAllowed" : true,
          "restfulShow" : false,
          "restfulIndex" : false,
          "restfulCreate" : false,
          "restfulUpdate" : false,
          "restfulDestroy" : false,
          "restful" : false
        }, {
          "responseHeaders" : [ {
            "baseName" : "X-Global-Transaction-Id",
            "getter" : "getXGlobalTransactionID",
            "setter" : "setXGlobalTransactionID",
            "description" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated. In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'. ",
            "dataType" : "string",
            "datatypeWithEnum" : "string",
            "name" : "XGlobalTransactionID",
            "defaultValueWithParam" : " = data.X-Global-Transaction-Id;",
            "baseType" : "string",
            "unescapedDescription" : "The transaction ID of the request for debugging purpose. If the header is set on the request, it will be honored. If not, it will be generated. In the event of a non-200 error return code, the transaction ID is also returned in the JSON error response as 'incident_id'.\n",
            "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : true,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "XGlobalTransactionID",
            "nameInSnakeCase" : "X_GLOBAL_TRANSACTION_I_D",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "xGlobalTransactionID",
            "openapiType" : "string",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "string",
            "iexclusiveMaximum" : false
          } ],
          "hasAuthMethods" : true,
          "hasConsumes" : false,
          "hasProduces" : true,
          "hasParams" : false,
          "hasOptionalParams" : false,
          "hasRequiredParams" : false,
          "returnTypeIsPrimitive" : false,
          "returnSimpleType" : true,
          "subresourceOperation" : false,
          "isMapContainer" : false,
          "isListContainer" : false,
          "isMultipart" : false,
          "hasMore" : true,
          "isResponseBinary" : false,
          "isResponseFile" : false,
          "hasReference" : false,
          "isRestfulIndex" : false,
          "isRestfulShow" : false,
          "isRestfulCreate" : false,
          "isRestfulUpdate" : false,
          "isRestfulDestroy" : false,
          "isRestful" : false,
          "isDeprecated" : false,
          "isCallbackRequest" : false,
          "path" : "/admin/mirroring/active-topics",
          "operationId" : "GetMirroringActiveTopics",
          "returnType" : "MirroringActiveTopics",
          "httpMethod" : "GET",
          "returnBaseType" : "MirroringActiveTopics",
          "summary" : "Get topics that are being actively mirrored",
          "notes" : "Get topics that are being actively mirrored.",
          "baseName" : "Default",
          "produces" : [ {
            "mediaType" : "application/json"
          } ],
          "allParams" : [ ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "cookieParams" : [ ],
          "requiredParams" : [ ],
          "optionalParams" : [ ],
          "authMethods" : [ ],
          "tags" : [ {
            "name" : "default"
          } ],
          "responses" : [ ],
          "callbacks" : [ ],
          "imports" : [ "MirroringActiveTopics", "GetMirroringActiveTopicsOptions" ],
          "examples" : [ ],
          "requestBodyExamples" : [ ],
          "vendorExtensions" : {
            "acceptJSON" : true,
            "constructForm" : false,
            "x-original-description" : "Get topics that are being actively mirrored.",
            "x-path-segments" : [ "admin/mirroring/active-topics" ],
            "x-method-path" : "get /admin/mirroring/active-topics",
            "x-validators" : [ ]
          },
          "nickname" : "GetMirroringActiveTopics",
          "operationIdOriginal" : "GetMirroringActiveTopics",
          "operationIdLowerCase" : "getmirroringactivetopics",
          "operationIdCamelCase" : "GetMirroringActiveTopics",
          "operationIdSnakeCase" : "get_mirroring_active_topics",
          "signature" : "(adminrest *AdminrestV1) GetMirroringActiveTopics(getMirroringActiveTopicsOptions *GetMirroringActiveTopicsOptions) (result *MirroringActiveTopics, response *core.DetailedResponse, err error)",
          "alternateSignature" : "(adminrest *AdminrestV1) GetMirroringActiveTopicsWithContext(ctx context.Context, getMirroringActiveTopicsOptions *GetMirroringActiveTopicsOptions) (result *MirroringActiveTopics, response *core.DetailedResponse, err error)",
          "optionsParam" : {
            "isFormParam" : false,
            "isQueryParam" : false,
            "isPathParam" : false,
            "isHeaderParam" : false,
            "isCookieParam" : false,
            "isBodyParam" : false,
            "hasMore" : false,
            "isContainer" : false,
            "secondaryParam" : false,
            "isCollectionFormatMulti" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "baseName" : "getMirroringActiveTopicsOptions",
            "paramName" : "getMirroringActiveTopicsOptions",
            "dataType" : "GetMirroringActiveTopicsOptions",
            "description" : "The GetMirroringActiveTopics options.",
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isFile" : false,
            "isEnum" : false,
            "vendorExtensions" : {
              "x-options-model" : "GetMirroringActiveTopicsOptions"
            },
            "hasValidation" : false,
            "isNullable" : false,
            "required" : false,
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "uniqueItems" : false,
            "sortScore" : 103005,
            "isOptionsParam" : true,
            "isGlobal" : false,
            "isAnyType" : false,
            "isAnyObject" : false,
            "openapiType" : "GetMirroringActiveTopicsOptions"
          },
          "sendEmptyBody" : false,
          "hasMultiConsumes" : false,
          "operationResponse" : {
            "baseName" : "MirroringActiveTopics",
            "complexType" : "MirroringActiveTopics",
            "getter" : "getMirroringActiveTopics",
            "setter" : "setMirroringActiveTopics",
            "dataType" : "MirroringActiveTopics",
            "datatypeWithEnum" : "MirroringActiveTopics",
            "name" : "MirroringActiveTopics",
            "defaultValueWithParam" : " = data.MirroringActiveTopics;",
            "baseType" : "MirroringActiveTopics",
            "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/mirroring_active_topics\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : false,
            "isModel" : true,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isEmail" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "MirroringActiveTopics",
            "nameInSnakeCase" : "MIRRORING_ACTIVE_TOPICS",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "varName" : "mirroringActiveTopics",
            "openapiType" : "mirroring_active_topics",
            "isDataSourceFilter" : false,
            "modelIsAbstract" : false,
            "modelIsDynamic" : false,
            "modelHasDiscriminator" : false,
            "isAnyObject" : false,
            "isAnyType" : false,
            "isBigDecimal" : false,
            "propInfo" : {
              "modelFieldName" : "MirroringActiveTopics",
              "modelFieldDatatype" : "*MirroringActiveTopics",
              "unmarshaller" : "UnmarshalMirroringActiveTopics",
              "modelDatatypePrefix" : "*",
              "setterDatatypePrefix" : "*",
              "setterParamName" : "mirroringActiveTopics",
              "setterAssignmentParamName" : "mirroringActiveTopics",
              "goFieldAnnotation" : "json:\"MirroringActiveTopics,omitempty\""
            },
            "modelList" : false,
            "byteArrayList" : false,
            "stringMap" : false,
            "datatype" : "MirroringActiveTopics",
            "iexclusiveMaximum" : false
          },
          "requestModels" : [ ],
          "responseModels" : [ {
            "interfaces" : [ ],
            "name" : "mirroring_active_topics",
            "classname" : "MirroringActiveTopics",
            "description" : "Topics that are being actively mirrored.",
            "classVarName" : "mirroringActiveTopics",
            "dataType" : "interface{}",
            "classFilename" : "MirroringActiveTopics",
            "isAlias" : false,
            "isString" : false,
            "isInteger" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "optionalVars" : [ ],
            "readOnlyVars" : [ ],
            "readWriteVars" : [ ],
            "allVars" : [ {
              "baseName" : "active_topics",
              "getter" : "GetActiveTopics",
              "setter" : "SetActiveTopics",
              "dataType" : "[]string",
              "datatypeWithEnum" : "[]string",
              "name" : "ActiveTopics",
              "defaultValueWithParam" : " = data.active_topics;",
              "baseType" : "[]",
              "containerType" : "array",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "hasMore" : false,
              "required" : false,
              "secondaryParam" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : false,
              "isContainer" : true,
              "isNotContainer" : false,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isLong" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isEmail" : false,
              "isListContainer" : true,
              "isMapContainer" : false,
              "isEnum" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "items" : {
                "baseName" : "active_topics",
                "getter" : "getActiveTopics",
                "setter" : "setActiveTopics",
                "description" : "Active mirroring topic.",
                "dataType" : "string",
                "datatypeWithEnum" : "string",
                "name" : "ActiveTopics",
                "defaultValueWithParam" : " = data.ActiveTopics;",
                "baseType" : "string",
                "unescapedDescription" : "Active mirroring topic.",
                "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Active mirroring topic.\",\n  \"x-original-description\" : \"Active mirroring topic.\"\n}",
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "hasMore" : false,
                "required" : false,
                "secondaryParam" : false,
                "hasMoreNonReadOnly" : false,
                "isPrimitiveType" : true,
                "isModel" : false,
                "isContainer" : false,
                "isNotContainer" : true,
                "isString" : true,
                "isNumeric" : false,
                "isInteger" : false,
                "isLong" : false,
                "isNumber" : false,
                "isFloat" : false,
                "isDouble" : false,
                "isByteArray" : false,
                "isBinary" : false,
                "isFile" : false,
                "isBoolean" : false,
                "isDate" : false,
                "isDateTime" : false,
                "isUuid" : false,
                "isEmail" : false,
                "isListContainer" : false,
                "isMapContainer" : false,
                "isEnum" : false,
                "isReadOnly" : false,
                "isWriteOnly" : false,
                "isNullable" : false,
                "vendorExtensions" : {
                  "x-original-description" : "Active mirroring topic."
                },
                "hasValidation" : false,
                "isInherited" : false,
                "nameInCamelCase" : "ActiveTopics",
                "nameInSnakeCase" : "ACTIVE_TOPICS",
                "isXmlAttribute" : false,
                "isXmlWrapped" : false,
                "varName" : "activeTopics",
                "openapiType" : "string",
                "isDataSourceFilter" : false,
                "modelIsAbstract" : false,
                "modelIsDynamic" : false,
                "modelHasDiscriminator" : false,
                "isAnyObject" : false,
                "isAnyType" : false,
                "isBigDecimal" : false,
                "modelList" : false,
                "byteArrayList" : false,
                "stringMap" : false,
                "datatype" : "string",
                "iexclusiveMaximum" : false
              },
              "vendorExtensions" : { },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "ActiveTopics",
              "nameInSnakeCase" : "ACTIVE_TOPICS",
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "varName" : "activeTopics",
              "openapiType" : "array",
              "isDataSourceFilter" : false,
              "modelIsAbstract" : false,
              "modelIsDynamic" : false,
              "modelHasDiscriminator" : false,
              "isAnyObject" : false,
              "isAnyType" : false,
              "isBigDecimal" : false,
              "modelList" : false,
              "byteArrayList" : false,
              "stringMap" : false,
              "datatype" : "[]string",
              "iexclusiveMaximum" : false
            } ],
            "parentVars" : [ ],
            "mandatory" : [ ],
            "allMandatory" : [ ],
            "imports" : [ "[]" ],
            "hasVars" : true,
            "emptyVars" : false,
            "hasMoreModels" : true,
            "hasEnums" : false,
            "isEnum" : false,
            "hasRequired" : false,
            "hasOptional" : true,
            "isArrayModel" : false,
            "hasChildren" : false,
            "isMapModel" : false,
            "hasOnlyReadOnly" : false,
            "vendorExtensions" : {
              "x-original-description" : "Topics that are being actively mirrored."
            },
            "hasAdditionalProperties" : false,
            "isOptionsModel" : false,
            "isRequestModel" : false,
            "isResponseModel" : true,
            "isTopLevelResponseModel" : false,
            "isAbstract" : false,
            "isSubclass" : false,
            "parentIsAbstract" : false,
            "usesGsonSerialization" : false,
            "serializationTypes" : [ ]
          } ],
          "hasFormParams" : false,
          "hasQueryParams" : false,
          "hasBodyParam" : false,
          "hasHeaderParams" : false,
          "hasPathParams" : false,
          "hasCookieParams" : false,
          "hasResponseHeaders" : true,
          "hasExamples" : false,
          "bodyAllowed" : false,
          "restfulShow" : false,
          "restfulIndex" : false,
          "restfulCreate" : false,
          "restfulUpdate" : false,
          "restfulDestroy" : false,
          "restful" : false
        } ],
        "pathPrefix" : "default"
      },
      "copyrightYear" : "2021",
      "groupMethodsByTag" : false,
      "textFlow" : { },
      "hideGenerationTimestamp" : true,
      "defaultServiceKey" : "adminrest",
      "unescapedAppDescription" : "The administration REST API for IBM Event Streams on Cloud.",
      "supportsICP4D" : false,
      "improvedNameFormatting" : false,
      "appName" : "IBM Event Streams Admin REST API",
      "generateApiDocs" : true,
      "serviceName" : "IBM Event Streams Admin REST API",
      "generatorVersion" : "unset",
      "includeSDKHeaders" : false,
      "apiPackage" : "github.com/IBM/adminrest-go-sdk",
      "baseUrl" : "https://adminrest.cloud.ibm.com",
      "basePath" : "https://adminrest.cloud.ibm.com",
      "classname" : "DefaultAPI",
      "negate" : { },
      "structName" : "AdminrestV1",
      "gitRepoId" : "GIT_REPO_ID",
      "apiRef" : "/Users/derekhowlett/vnext-git/src/github.ibm.com/mhub/admin-rest-sdk/golang-sdk/docs/api-ref.json",
      "generatedDate" : "2021-02-15T13:36:46.696Z[Europe/London]",
      "vcapServicesName" : "adminrest",
      "appDescriptionWithNewLines" : "The administration REST API for IBM Event Streams on Cloud.",
      "sdkName" : "adminrest",
      "supportsBasicAuth" : true,
      "gitUserId" : "GIT_USER_ID"
    } ]
  },
  "currentVersion" : "2021-02-15",
  "includeExternalConfig" : false,
  "structVarName" : "adminrest",
  "configFileName" : "adminrest_v1.env",
  "svcPackageName" : "adminrestv1",
  "generatedYear" : "2021",
  "scheme" : "https",
  "modelPackage" : "",
  "indent" : { },
  "clearIndent" : { },
  "className" : "AdminrestV1",
  "x-gzip-compress-requests" : false,
  "generateApis" : true,
  "basePathWithoutHost" : "",
  "textFlowTab" : { },
  "servers" : [ {
    "url" : "https://adminrest.cloud.ibm.com",
    "variables" : [ ]
  } ],
  "exampleImports" : [ "\"encoding/json\"", "\"fmt\"", "\"github.com/IBM/adminrest-go-sdk/adminrestv1\"", "\"github.com/IBM/go-sdk-core/v4/core\"", ". \"github.com/onsi/ginkgo\"", ". \"github.com/onsi/gomega\"", "\"os\"" ],
  "copyrightYear" : "2021",
  "groupMethodsByTag" : false,
  "textFlow" : { },
  "hideGenerationTimestamp" : true,
  "defaultServiceKey" : "adminrest",
  "unescapedAppDescription" : "The administration REST API for IBM Event Streams on Cloud.",
  "supportsICP4D" : false,
  "improvedNameFormatting" : false,
  "appName" : "IBM Event Streams Admin REST API",
  "generateApiDocs" : true,
  "serviceName" : "IBM Event Streams Admin REST API",
  "generatorVersion" : "unset",
  "includeSDKHeaders" : false,
  "apiPackage" : "github.com/IBM/adminrest-go-sdk",
  "hasServers" : true,
  "baseUrl" : "https://adminrest.cloud.ibm.com",
  "basePath" : "https://adminrest.cloud.ibm.com",
  "negate" : { },
  "structName" : "AdminrestV1",
  "gitRepoId" : "GIT_REPO_ID",
  "apiRef" : "/Users/derekhowlett/vnext-git/src/github.ibm.com/mhub/admin-rest-sdk/golang-sdk/docs/api-ref.json",
  "generatedDate" : "2021-02-15T13:36:46.696Z[Europe/London]",
  "hasTestableModels" : false,
  "packageImports" : [ "\"context\"", "\"encoding/json\"", "\"fmt\"", "common \"github.com/IBM/adminrest-go-sdk/common\"", "\"github.com/IBM/go-sdk-core/v4/core\"", "\"net/http\"", "\"reflect\"", "\"time\"" ],
  "vcapServicesName" : "adminrest",
  "appDescriptionWithNewLines" : "The administration REST API for IBM Event Streams on Cloud.",
  "sdkName" : "adminrest",
  "supportsBasicAuth" : true,
  "gitUserId" : "GIT_USER_ID"
}